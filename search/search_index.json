{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs None Yups MkDocs tool untuk membuat static html dari markdown. Selamat datang n halaman ini untuk menaruh news dari situs ini. sering2 di check barang kali salah satu dari Arduino PlatformIo ESP32, ESP8266 AVR STM32 PLC siemens PLC Mitsubishi Scada DCS OPC C-lang V-lang Nim-lang Spice baik TI-SPice atau LT-Spice Linux (Artix, Debian) Bisa jadi bahan diskusi kita heheh ;)","title":"Home"},{"location":"#welcome-to-mkdocs","text":"None Yups MkDocs tool untuk membuat static html dari markdown. Selamat datang n halaman ini untuk menaruh news dari situs ini. sering2 di check barang kali salah satu dari Arduino PlatformIo ESP32, ESP8266 AVR STM32 PLC siemens PLC Mitsubishi Scada DCS OPC C-lang V-lang Nim-lang Spice baik TI-SPice atau LT-Spice Linux (Artix, Debian) Bisa jadi bahan diskusi kita heheh ;)","title":"Welcome to MkDocs"},{"location":"about/","text":"Note Masih dikerjakan hehe.","title":"About"},{"location":"info/","text":"Makro Macros Plugin Environment General List All available variables and filters within the macros plugin: Variable Type Content extra dict disqus = 'kenzanin-github-io', social = [{'icon': 'fontawesome/brands/telegram', 'link': 'https://telegram.me/kenzanin', 'name': 'kenzanin'}, {'icon': 'fontawesome/brands/whatsapp', 'link': 'https://wa.link/q6rses', 'name': 'suka isnaini'}, {'icon': 'fontawesome/solid/at', 'link': 'mailto:kenzanin@gmail.com', 'name': 'kenzanin'}] config Config config_file_path = '/home/kenzanin/Documents/riset/kenzanin.github.io/mkdocs.yml', site_name = 'Solderen', nav = [{'Home': 'index.md'}, {'About': 'about.md'}, {'Framework': [{'Arduino': [{'Pengenalan': 'framework/arduino/pengenalan.md'}, {'Install': 'framework/arduino/install.md'}, {'Setup Project': 'framework/arduino/setupProject.md'}, {'Contoh Project': [{'Blink': 'framework/arduino/contoh/blink.md'}, {'Digital Read Serial': 'framework/arduino/contoh/digitalReadSerial.md'}]}]}]}, {'Micro Controller': [{'Mcs51': [{'Pengenalan': 'microController/mcs51/pengenalan.md'}, {'Hardware': 'microController/mcs51/hardware.md'}, {'Software': [{'MCU8051IDE': 'microController/mcs51/software.md'}, {'SDCC': 'microController/mcs51/sdcc.md'}, {'Hello World Asm': 'microController/mcs51/helloWorldAsm.md'}, {'Hello World C': 'microController/mcs51/helloWorldC.md'}]}, {'Contoh Project': [{'Count Up Led': 'microController/mcs51/contoh/countUpLed.md'}, {'Count Up Led Asm': 'microController/mcs51/contoh/countUpLedAsm.md'}, {'Count Down Led': 'microController/mcs51/contoh/countDownLed.md'}, {'Count Down Led Asm': 'microController/mcs51/contoh/countDownLedAsm.md'}]}]}]}, {'Lang': [{'C Lang': [{'Pengenalan': 'lang/clang/pengenalan.md'}, {'Install': 'lang/clang/install.md'}, {'Contoh': [{'Hello World': 'lang/clang/contoh/helloWorld.md'}, {'Armstrong Number': 'lang/clang/contoh/armstrongNumber.md'}, {'Darts': 'lang/clang/contoh/darts.md'}, {'Resistor Color': 'lang/clang/contoh/resistorColor.md'}, {'Resistor Color Duo': 'lang/clang/contoh/resistorColorDuo.md'}, {'Resistor Color Trio': 'lang/clang/contoh/resistorColorTrio.md'}]}]}, {'Nim Lang': [{'Pengenalan': 'lang/nim/pengenalan.md'}]}, {'V Lang': [{'Pengenalan': 'lang/vlang/pengenalan.md'}]}, {'Pascal': [{'Pengenalan': 'lang/pascal/pengenalan.md'}]}, {'Asembly 8051': [{'Pengenalan': 'lang/asm8051/pengenalan.md'}]}, {'Asembly AVR': [{'Pengenalan': 'lang/asmAvr/pengenalan.md'}]}]}], pages [ NoneType ], site_url = 'https://kenzanin.github.io', site_description [ NoneType ], site_author [ NoneType ], theme [ Theme ], docs_dir = '/home/kenzanin/Documents/riset/kenzanin.github.io/docs', site_dir = '/home/kenzanin/Documents/riset/kenzanin.github.io/site', copyright = 'Copyright \u00a9 2021 [Suka Isnaini]', google_analytics [ NoneType ], dev_addr [ Address ], use_directory_urls = True, repo_url = 'https://github.com/kenzanin/kenzanin.github.io/', repo_name = 'GitHub', edit_uri = 'tree/main/docs/', extra_css = [], extra_javascript = [], extra_templates = [], markdown_extensions = ['toc', 'tables', 'fenced_code', 'pymdownx.keys', 'pymdownx.highlight', 'pymdownx.tabbed', 'pymdownx.superfences', 'pymdownx.snippets', 'admonition', 'abbr', 'pymdownx.critic', 'pymdownx.betterem', 'markdown_include.include', 'attr_list', 'footnotes', 'meta', 'pymdownx.magiclink', 'pymdownx.pathconverter', 'pymdownx.inlinehilite'], mdx_configs [ dict ], strict = False, remote_branch = 'gh-pages', remote_name = 'origin', extra [ SubConfig ], plugins [ PluginCollection ] exercism str '[Exercism.io](https://exercism.io/){:target=\"_blank\"}' environment dict system = 'Linux', system_version = '5.10.6-1-clear', python_version = '3.9.1', mkdocs_version = '1.1.2', macros_plugin_version = '0.5.0', jinja2_version = '2.11.2' plugin Config module_name = 'main', modules = [], include_dir = 'docs', include_yaml = ['docs/lang/clang/variables.yml'], j2_block_start_string = '', j2_block_end_string = '', j2_variable_start_string = '', j2_variable_end_string = '', verbose = False git dict status = True, date [ datetime ], short_commit = '3ed4972', commit = '3ed49722345ceb784f8f4b0120c8fdc6909b48a0', author = 'kenzanin', tag = '', date_ISO = '2021-01-25 14:29:00 +0700', message = 'jan25', raw = 'commit 3ed49722345ceb784f8f4b0120c8fdc6909b48a0\\nAuthor: kenzanin \\nDate: Mon Jan 25 14:29:00 2021 +0700\\n\\n jan25', root_dir = '/home/kenzanin/Documents/riset/kenzanin.github.io' context function ( obj, e ) Default mkdocs_macro List the defined variables macros_info function ( ) Test/debug function: list useful documentation on the mkdocs_macro environment. now function ( ) Get the current time (returns a datetime object). Used alone, it provides a timestamp. To get the year use now().year , for the month number now().month , etc. fix_url function ( url, r ) If url is relative, fix it so that it points to the docs diretory. This is necessary because relative links in markdown must be adapted in html ('img/foo.png' => '../img/img.png'). disqus str 'kenzanin-github-io' social list [{'icon': 'fontawesome/brands/telegram', 'link': 'https://telegram.me/kenzanin', 'name': 'kenzanin'}, {'icon': 'fontawesome/brands/whatsapp', 'link': 'https://wa.link/q6rses', 'name': 'suka isnaini'}, {'icon': 'fontawesome/solid/at', 'link': 'mailto:kenzanin@gmail.com', 'name': 'kenzanin'}] filters dict pretty [ function ] filters_builtin dict abs [ builtin_function_or_method ], attr [ function ], batch [ function ], capitalize [ function ], center [ function ], count [ builtin_function_or_method ], d [ function ], default [ function ], dictsort [ function ], e [ builtin_function_or_method ], escape [ builtin_function_or_method ], filesizeformat [ function ], first [ function ], float [ function ], forceescape [ function ], format [ function ], groupby [ function ], indent [ function ], int [ function ], join [ function ], last [ function ], length [ builtin_function_or_method ], list [ function ], lower [ function ], map [ function ], min [ function ], max [ function ], pprint [ function ], random [ function ], reject [ function ], rejectattr [ function ], replace [ function ], reverse [ function ], round [ function ], safe [ function ], select [ function ], selectattr [ function ], slice [ function ], sort [ function ], string [ builtin_function_or_method ], striptags [ function ], sum [ function ], title [ function ], trim [ function ], truncate [ function ], unique [ function ], upper [ function ], urlencode [ function ], urlize [ function ], wordcount [ function ], wordwrap [ function ], xmlattr [ function ], tojson [ function ] navigation Navigation Page(title='Home', url='/') Page(title='About', url='/about/') Section(title='Framework') Section(title='Arduino') Page(title='Pengenalan', url='/framework/arduino/pengenalan/') Page(title='Install', url='/framework/arduino/install/') Page(title='Setup Project', url='/framework/arduino/setupProject/') Section(title='Contoh Project') Page(title='Blink', url='/framework/arduino/contoh/blink/') Page(title='Digital Read Serial', url='/framework/arduino/contoh/digitalReadSerial/') Section(title='Micro Controller') Section(title='Mcs51') Page(title='Pengenalan', url='/microController/mcs51/pengenalan/') Page(title='Hardware', url='/microController/mcs51/hardware/') Section(title='Software') Page(title='MCU8051IDE', url='/microController/mcs51/software/') Page(title='SDCC', url='/microController/mcs51/sdcc/') Page(title='Hello World Asm', url='/microController/mcs51/helloWorldAsm/') Page(title='Hello World C', url='/microController/mcs51/helloWorldC/') Section(title='Contoh Project') Page(title='Count Up Led', url='/microController/mcs51/contoh/countUpLed/') Page(title='Count Up Led Asm', url='/microController/mcs51/contoh/countUpLedAsm/') Page(title='Count Down Led', url='/microController/mcs51/contoh/countDownLed/') Page(title='Count Down Led Asm', url='/microController/mcs51/contoh/countDownLedAsm/') Section(title='Lang') Section(title='C Lang') Page(title='Pengenalan', url='/lang/clang/pengenalan/') Page(title='Install', url='/lang/clang/install/') Section(title='Contoh') Page(title='Hello World', url='/lang/clang/contoh/helloWorld/') Page(title='Armstrong Number', url='/lang/clang/contoh/armstrongNumber/') Page(title='Darts', url='/lang/clang/contoh/darts/') Page(title='Resistor Color', url='/lang/clang/contoh/resistorColor/') Page(title='Resistor Color Duo', url='/lang/clang/contoh/resistorColorDuo/') Page(title='Resistor Color Trio', url='/lang/clang/contoh/resistorColorTrio/') Section(title='Nim Lang') Link(title='Pengenalan', url='lang/nim/pengenalan.md') Section(title='V Lang') Link(title='Pengenalan', url='lang/vlang/pengenalan.md') Section(title='Pascal') Link(title='Pengenalan', url='lang/pascal/pengenalan.md') Section(title='Asembly 8051') Page(title='Pengenalan', url='/lang/asm8051/pengenalan/') Section(title='Asembly AVR') Link(title='Pengenalan', url='lang/asmAvr/pengenalan.md') page Page Page(title='Makro', url='/info/') Config Information Standard MkDocs configuration information. Do not try to modify. e.g. {{ config.docs_dir }} See also the MkDocs documentation on the config object . Variable Type Content config_file_path str '/home/kenzanin/Documents/riset/kenzanin.github.io/mkdocs.yml' site_name str 'Solderen' nav list [{'Home': 'index.md'}, {'About': 'about.md'}, {'Framework': [{'Arduino': [{'Pengenalan': 'framework/arduino/pengenalan.md'}, {'Install': 'framework/arduino/install.md'}, {'Setup Project': 'framework/arduino/setupProject.md'}, {'Contoh Project': [{'Blink': 'framework/arduino/contoh/blink.md'}, {'Digital Read Serial': 'framework/arduino/contoh/digitalReadSerial.md'}]}]}]}, {'Micro Controller': [{'Mcs51': [{'Pengenalan': 'microController/mcs51/pengenalan.md'}, {'Hardware': 'microController/mcs51/hardware.md'}, {'Software': [{'MCU8051IDE': 'microController/mcs51/software.md'}, {'SDCC': 'microController/mcs51/sdcc.md'}, {'Hello World Asm': 'microController/mcs51/helloWorldAsm.md'}, {'Hello World C': 'microController/mcs51/helloWorldC.md'}]}, {'Contoh Project': [{'Count Up Led': 'microController/mcs51/contoh/countUpLed.md'}, {'Count Up Led Asm': 'microController/mcs51/contoh/countUpLedAsm.md'}, {'Count Down Led': 'microController/mcs51/contoh/countDownLed.md'}, {'Count Down Led Asm': 'microController/mcs51/contoh/countDownLedAsm.md'}]}]}]}, {'Lang': [{'C Lang': [{'Pengenalan': 'lang/clang/pengenalan.md'}, {'Install': 'lang/clang/install.md'}, {'Contoh': [{'Hello World': 'lang/clang/contoh/helloWorld.md'}, {'Armstrong Number': 'lang/clang/contoh/armstrongNumber.md'}, {'Darts': 'lang/clang/contoh/darts.md'}, {'Resistor Color': 'lang/clang/contoh/resistorColor.md'}, {'Resistor Color Duo': 'lang/clang/contoh/resistorColorDuo.md'}, {'Resistor Color Trio': 'lang/clang/contoh/resistorColorTrio.md'}]}]}, {'Nim Lang': [{'Pengenalan': 'lang/nim/pengenalan.md'}]}, {'V Lang': [{'Pengenalan': 'lang/vlang/pengenalan.md'}]}, {'Pascal': [{'Pengenalan': 'lang/pascal/pengenalan.md'}]}, {'Asembly 8051': [{'Pengenalan': 'lang/asm8051/pengenalan.md'}]}, {'Asembly AVR': [{'Pengenalan': 'lang/asmAvr/pengenalan.md'}]}]}] pages NoneType None site_url str 'https://kenzanin.github.io' site_description NoneType None site_author NoneType None theme Theme Theme(name='material', dirs=['/usr/lib/python3.9/site-packages/material', '/usr/lib/python3.9/site-packages/mkdocs/templates'], static_templates=['404.html', 'sitemap.xml'], language='en', direction=None, features=['tabs', 'navigation.sections'], palette={'scheme': 'slate'}, font={'text': 'JetBrains Mono', 'code': 'consolas'}, icon=None, favicon='assets/images/favicon.png', include_search_page=False, search_index_only=True) docs_dir str '/home/kenzanin/Documents/riset/kenzanin.github.io/docs' site_dir str '/home/kenzanin/Documents/riset/kenzanin.github.io/site' copyright str 'Copyright \u00a9 2021 [Suka Isnaini]' google_analytics NoneType None dev_addr Address Address(host='127.0.0.1', port=8000) use_directory_urls bool True repo_url str 'https://github.com/kenzanin/kenzanin.github.io/' repo_name str 'GitHub' edit_uri str 'tree/main/docs/' extra_css list [] extra_javascript list [] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'pymdownx.keys', 'pymdownx.highlight', 'pymdownx.tabbed', 'pymdownx.superfences', 'pymdownx.snippets', 'admonition', 'abbr', 'pymdownx.critic', 'pymdownx.betterem', 'markdown_include.include', 'attr_list', 'footnotes', 'meta', 'pymdownx.magiclink', 'pymdownx.pathconverter', 'pymdownx.inlinehilite'] mdx_configs dict pymdownx.highlight [ dict ], pymdownx.snippets [ dict ], pymdownx.betterem [ dict ], markdown_include.include [ dict ] strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra SubConfig {'disqus': 'kenzanin-github-io', 'social': [{'icon': 'fontawesome/brands/telegram', 'link': 'https://telegram.me/kenzanin', 'name': 'kenzanin'}, {'icon': 'fontawesome/brands/whatsapp', 'link': 'https://wa.link/q6rses', 'name': 'suka isnaini'}, {'icon': 'fontawesome/solid/at', 'link': 'mailto:kenzanin@gmail.com', 'name': 'kenzanin'}]} plugins PluginCollection search [ SearchPlugin ], macros [ MacrosPlugin ], git-revision-date-localized [ GitRevisionDateLocalizedPlugin ], minify [ MinifyPlugin ] Git Information Information available on the last commit and the git repository containing the documentation project: e.g. {{ git.message }} Variable Type Content status bool True date datetime datetime.datetime(2021, 1, 25, 14, 29, tzinfo=tzoffset(None, 25200)) short_commit str '3ed4972' commit str '3ed49722345ceb784f8f4b0120c8fdc6909b48a0' author str 'kenzanin' tag str '' date_ISO str '2021-01-25 14:29:00 +0700' message str 'jan25' raw str 'commit 3ed49722345ceb784f8f4b0120c8fdc6909b48a0\\nAuthor: kenzanin \\nDate: Mon Jan 25 14:29:00 2021 +0700\\n\\n jan25' root_dir str '/home/kenzanin/Documents/riset/kenzanin.github.io' Page Attributes Provided by MkDocs. These attributes change for every page (the attributes shown are for this page). e.g. {{ page.title }} See also the MkDocs documentation on the page object . Variable Type Content file File page [ Page ], src_path = 'info.md', abs_src_path = '/home/kenzanin/Documents/riset/kenzanin.github.io/docs/info.md', name = 'info', dest_path = 'info/index.html', abs_dest_path = '/home/kenzanin/Documents/riset/kenzanin.github.io/site/info/index.html', url = 'info/' title str 'Makro' parent NoneType None children NoneType None previous_page NoneType None next_page NoneType None _Page__active bool False is_section bool False is_page bool True is_link bool False update_date str '2021-01-25' canonical_url str 'https://kenzanin.github.io/info/' abs_url str '/info/' edit_url str 'https://github.com/kenzanin/kenzanin.github.io/tree/main/docs/info.md' markdown str '# Makro\\n{{ macros_info() }}\\n' content NoneType None toc list [] meta dict To have all titles of all pages, use: 1 2 3 {% for page in navigation.pages %} - {{ page.title }} {% endfor% } Plugin Filters These filters are provided as a standard by the macros plugin. Variable Type Content pretty function ( var_list, rows, header, e ) Default mkdocs_macro Prettify a dictionary or object (used for environment documentation, or debugging). Builtin Jinja2 Filters These filters are provided by Jinja2 as a standard. See also the Jinja2 documentation on builtin filters ). Variable Type Content abs builtin_function_or_method Return the absolute value of the argument. attr function ( environment, obj, name, value ) Get an attribute of an object. foo|attr(\"bar\") works like foo.bar just that always an attribute is returned and items are not looked up. batch function ( value, linecount, fill_with, tmp, item ) A filter that batches items. It works pretty much like slice just the other way round. It returns a list of lists with the given number of items. If you provide a second parameter this is used to fill up missing items. See this example. capitalize function ( s ) Capitalize a value. The first character will be uppercase, all others lowercase. center function ( value, width ) Centers the value in a field of a given width. count builtin_function_or_method Return the number of items in a container. d function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. default function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. dictsort function ( value, case_sensitive, by, reverse, sort_func ) Sort a dict and yield (key, value) pairs. Because python dicts are unsorted you may want to use this function to order them by either key or value. e builtin_function_or_method escape(s) -> markup escape builtin_function_or_method escape(s) -> markup filesizeformat function ( value, binary, bytes, base, prefixes, i, prefix, unit ) Format the value like a 'human-readable' file size (i.e. 13 kB, 4.1 MB, 102 Bytes, etc). Per default decimal prefixes are used (Mega, Giga, etc.), if the second parameter is set to True the binary prefixes are used (Mebi, Gibi). first function ( environment, seq ) Return the first item of a sequence. float function ( value, default ) Convert the value into a floating point number. If the conversion doesn't work it will return 0.0 . You can override this default using the first parameter. forceescape function ( value ) Enforce HTML escaping. This will probably double escape variables. format function ( value, args, kwargs ) Apply the given values to a printf-style _ format string, like string % values . groupby function ( environment, value, attribute, expr ) Group a sequence of objects by an attribute using Python's :func: itertools.groupby . The attribute can use dot notation for nested access, like \"address.city\" . Unlike Python's groupby , the values are sorted first so only one group is returned for each unique value. indent function ( s, width, first, blank, indentfirst, newline, rv, lines ) Return a copy of the string with each line indented by 4 spaces. The first line and blank lines are not indented by default. int function ( value, default, base ) Convert the value into an integer. If the conversion doesn't work it will return 0 . You can override this default using the first parameter. You can also override the default base (10) in the second parameter, which handles input with prefixes such as 0b, 0o and 0x for bases 2, 8 and 16 respectively. The base is ignored for decimal numbers and non-string values. join function ( eval_ctx, value, d, attribute, do_escape, idx, item ) Return a string which is the concatenation of the strings in the sequence. The separator between elements is an empty string per default, you can define it with the optional parameter. last function ( environment, seq ) Return the last item of a sequence. length builtin_function_or_method Return the number of items in a container. list function ( value ) Convert the value into a list. If it was a string the returned list will be a list of characters. lower function ( s ) Convert a value to lowercase. map function ( args, kwargs, seq, func, item ) Applies a filter on a sequence of objects or looks up an attribute. This is useful when dealing with lists of objects but you are really only interested in a certain value of it. min function ( environment, value, case_sensitive, attribute ) Return the smallest item from the sequence. max function ( environment, value, case_sensitive, attribute ) Return the largest item from the sequence. pprint function ( value, verbose ) Pretty print a variable. Useful for debugging. random function ( context, seq ) Return a random item from the sequence. reject function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and rejecting the objects with the test succeeding. rejectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and rejecting the objects with the test succeeding. replace function ( eval_ctx, s, old, new, count ) Return a copy of the value with all occurrences of a substring replaced with a new one. The first argument is the substring that should be replaced, the second is the replacement string. If the optional third argument count is given, only the first count occurrences are replaced. reverse function ( value, rv ) Reverse the object or return an iterator that iterates over it the other way round. round function ( value, precision, method, func ) Round the number to a given precision. The first parameter specifies the precision (default is 0 ), the second the rounding method. safe function ( value ) Mark the value as safe which means that in an environment with automatic escaping enabled this variable will not be escaped. select function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and only selecting the objects with the test succeeding. selectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and only selecting the objects with the test succeeding. slice function ( value, slices, fill_with, seq, length, items_per_slice, slices_with_extra, offset, slice_number, start, end, tmp ) Slice an iterator and return a list of lists containing those items. Useful if you want to create a div containing three ul tags that represent columns. sort function ( environment, value, reverse, case_sensitive, attribute, key_func ) Sort an iterable using Python's :func: sorted . string builtin_function_or_method soft_unicode(object) -> string striptags function ( value ) Strip SGML/XML tags and replace adjacent whitespace by one space. sum function ( environment, iterable, attribute, start ) Returns the sum of a sequence of numbers plus the value of parameter 'start' (which defaults to 0). When the sequence is empty it returns start. title function ( s ) Return a titlecased version of the value. I.e. words will start with uppercase letters, all remaining characters are lowercase. trim function ( value, chars ) Strip leading and trailing characters, by default whitespace. truncate function ( env, s, length, killwords, end, leeway, result ) Return a truncated copy of the string. The length is specified with the first parameter which defaults to 255 . If the second parameter is true the filter will cut the text at length. Otherwise it will discard the last word. If the text was in fact truncated it will append an ellipsis sign ( \"...\" ). If you want a different ellipsis sign than \"...\" you can specify it using the third parameter. Strings that only exceed the length by the tolerance margin given in the fourth parameter will not be truncated. unique function ( environment, value, case_sensitive, attribute, getter, seen, item, key ) Returns a list of unique items from the given iterable. upper function ( s ) Convert a value to uppercase. urlencode function ( value, items ) Quote data for use in a URL path or query using UTF-8. urlize function ( eval_ctx, value, trim_url_limit, nofollow, target, rel, policies, rv ) Converts URLs in plain text into clickable links. wordcount function ( s ) Count the words in that string. wordwrap function ( environment, s, width, break_long_words, wrapstring, break_on_hyphens ) Wrap a string to the given width. Existing newlines are treated as paragraphs to be wrapped separately. xmlattr function ( _eval_ctx, d, autospace, rv ) Create an SGML/XML attribute string based on the items in a dict. All values that are neither none nor undefined are automatically escaped. tojson function ( eval_ctx, value, indent, policies, dumper, options ) Dumps a structure to JSON so that it's safe to use in <script> tags. It accepts the same arguments and returns a JSON string. Note that this is available in templates through the |tojson filter which will also mark the result as safe. Due to how this function escapes certain characters this is safe even if used outside of <script> tags.","title":"Makro"},{"location":"info/#makro","text":"","title":"Makro"},{"location":"info/#macros-plugin-environment","text":"","title":"Macros Plugin Environment"},{"location":"info/#general-list","text":"All available variables and filters within the macros plugin: Variable Type Content extra dict disqus = 'kenzanin-github-io', social = [{'icon': 'fontawesome/brands/telegram', 'link': 'https://telegram.me/kenzanin', 'name': 'kenzanin'}, {'icon': 'fontawesome/brands/whatsapp', 'link': 'https://wa.link/q6rses', 'name': 'suka isnaini'}, {'icon': 'fontawesome/solid/at', 'link': 'mailto:kenzanin@gmail.com', 'name': 'kenzanin'}] config Config config_file_path = '/home/kenzanin/Documents/riset/kenzanin.github.io/mkdocs.yml', site_name = 'Solderen', nav = [{'Home': 'index.md'}, {'About': 'about.md'}, {'Framework': [{'Arduino': [{'Pengenalan': 'framework/arduino/pengenalan.md'}, {'Install': 'framework/arduino/install.md'}, {'Setup Project': 'framework/arduino/setupProject.md'}, {'Contoh Project': [{'Blink': 'framework/arduino/contoh/blink.md'}, {'Digital Read Serial': 'framework/arduino/contoh/digitalReadSerial.md'}]}]}]}, {'Micro Controller': [{'Mcs51': [{'Pengenalan': 'microController/mcs51/pengenalan.md'}, {'Hardware': 'microController/mcs51/hardware.md'}, {'Software': [{'MCU8051IDE': 'microController/mcs51/software.md'}, {'SDCC': 'microController/mcs51/sdcc.md'}, {'Hello World Asm': 'microController/mcs51/helloWorldAsm.md'}, {'Hello World C': 'microController/mcs51/helloWorldC.md'}]}, {'Contoh Project': [{'Count Up Led': 'microController/mcs51/contoh/countUpLed.md'}, {'Count Up Led Asm': 'microController/mcs51/contoh/countUpLedAsm.md'}, {'Count Down Led': 'microController/mcs51/contoh/countDownLed.md'}, {'Count Down Led Asm': 'microController/mcs51/contoh/countDownLedAsm.md'}]}]}]}, {'Lang': [{'C Lang': [{'Pengenalan': 'lang/clang/pengenalan.md'}, {'Install': 'lang/clang/install.md'}, {'Contoh': [{'Hello World': 'lang/clang/contoh/helloWorld.md'}, {'Armstrong Number': 'lang/clang/contoh/armstrongNumber.md'}, {'Darts': 'lang/clang/contoh/darts.md'}, {'Resistor Color': 'lang/clang/contoh/resistorColor.md'}, {'Resistor Color Duo': 'lang/clang/contoh/resistorColorDuo.md'}, {'Resistor Color Trio': 'lang/clang/contoh/resistorColorTrio.md'}]}]}, {'Nim Lang': [{'Pengenalan': 'lang/nim/pengenalan.md'}]}, {'V Lang': [{'Pengenalan': 'lang/vlang/pengenalan.md'}]}, {'Pascal': [{'Pengenalan': 'lang/pascal/pengenalan.md'}]}, {'Asembly 8051': [{'Pengenalan': 'lang/asm8051/pengenalan.md'}]}, {'Asembly AVR': [{'Pengenalan': 'lang/asmAvr/pengenalan.md'}]}]}], pages [ NoneType ], site_url = 'https://kenzanin.github.io', site_description [ NoneType ], site_author [ NoneType ], theme [ Theme ], docs_dir = '/home/kenzanin/Documents/riset/kenzanin.github.io/docs', site_dir = '/home/kenzanin/Documents/riset/kenzanin.github.io/site', copyright = 'Copyright \u00a9 2021 [Suka Isnaini]', google_analytics [ NoneType ], dev_addr [ Address ], use_directory_urls = True, repo_url = 'https://github.com/kenzanin/kenzanin.github.io/', repo_name = 'GitHub', edit_uri = 'tree/main/docs/', extra_css = [], extra_javascript = [], extra_templates = [], markdown_extensions = ['toc', 'tables', 'fenced_code', 'pymdownx.keys', 'pymdownx.highlight', 'pymdownx.tabbed', 'pymdownx.superfences', 'pymdownx.snippets', 'admonition', 'abbr', 'pymdownx.critic', 'pymdownx.betterem', 'markdown_include.include', 'attr_list', 'footnotes', 'meta', 'pymdownx.magiclink', 'pymdownx.pathconverter', 'pymdownx.inlinehilite'], mdx_configs [ dict ], strict = False, remote_branch = 'gh-pages', remote_name = 'origin', extra [ SubConfig ], plugins [ PluginCollection ] exercism str '[Exercism.io](https://exercism.io/){:target=\"_blank\"}' environment dict system = 'Linux', system_version = '5.10.6-1-clear', python_version = '3.9.1', mkdocs_version = '1.1.2', macros_plugin_version = '0.5.0', jinja2_version = '2.11.2' plugin Config module_name = 'main', modules = [], include_dir = 'docs', include_yaml = ['docs/lang/clang/variables.yml'], j2_block_start_string = '', j2_block_end_string = '', j2_variable_start_string = '', j2_variable_end_string = '', verbose = False git dict status = True, date [ datetime ], short_commit = '3ed4972', commit = '3ed49722345ceb784f8f4b0120c8fdc6909b48a0', author = 'kenzanin', tag = '', date_ISO = '2021-01-25 14:29:00 +0700', message = 'jan25', raw = 'commit 3ed49722345ceb784f8f4b0120c8fdc6909b48a0\\nAuthor: kenzanin \\nDate: Mon Jan 25 14:29:00 2021 +0700\\n\\n jan25', root_dir = '/home/kenzanin/Documents/riset/kenzanin.github.io' context function ( obj, e ) Default mkdocs_macro List the defined variables macros_info function ( ) Test/debug function: list useful documentation on the mkdocs_macro environment. now function ( ) Get the current time (returns a datetime object). Used alone, it provides a timestamp. To get the year use now().year , for the month number now().month , etc. fix_url function ( url, r ) If url is relative, fix it so that it points to the docs diretory. This is necessary because relative links in markdown must be adapted in html ('img/foo.png' => '../img/img.png'). disqus str 'kenzanin-github-io' social list [{'icon': 'fontawesome/brands/telegram', 'link': 'https://telegram.me/kenzanin', 'name': 'kenzanin'}, {'icon': 'fontawesome/brands/whatsapp', 'link': 'https://wa.link/q6rses', 'name': 'suka isnaini'}, {'icon': 'fontawesome/solid/at', 'link': 'mailto:kenzanin@gmail.com', 'name': 'kenzanin'}] filters dict pretty [ function ] filters_builtin dict abs [ builtin_function_or_method ], attr [ function ], batch [ function ], capitalize [ function ], center [ function ], count [ builtin_function_or_method ], d [ function ], default [ function ], dictsort [ function ], e [ builtin_function_or_method ], escape [ builtin_function_or_method ], filesizeformat [ function ], first [ function ], float [ function ], forceescape [ function ], format [ function ], groupby [ function ], indent [ function ], int [ function ], join [ function ], last [ function ], length [ builtin_function_or_method ], list [ function ], lower [ function ], map [ function ], min [ function ], max [ function ], pprint [ function ], random [ function ], reject [ function ], rejectattr [ function ], replace [ function ], reverse [ function ], round [ function ], safe [ function ], select [ function ], selectattr [ function ], slice [ function ], sort [ function ], string [ builtin_function_or_method ], striptags [ function ], sum [ function ], title [ function ], trim [ function ], truncate [ function ], unique [ function ], upper [ function ], urlencode [ function ], urlize [ function ], wordcount [ function ], wordwrap [ function ], xmlattr [ function ], tojson [ function ] navigation Navigation Page(title='Home', url='/') Page(title='About', url='/about/') Section(title='Framework') Section(title='Arduino') Page(title='Pengenalan', url='/framework/arduino/pengenalan/') Page(title='Install', url='/framework/arduino/install/') Page(title='Setup Project', url='/framework/arduino/setupProject/') Section(title='Contoh Project') Page(title='Blink', url='/framework/arduino/contoh/blink/') Page(title='Digital Read Serial', url='/framework/arduino/contoh/digitalReadSerial/') Section(title='Micro Controller') Section(title='Mcs51') Page(title='Pengenalan', url='/microController/mcs51/pengenalan/') Page(title='Hardware', url='/microController/mcs51/hardware/') Section(title='Software') Page(title='MCU8051IDE', url='/microController/mcs51/software/') Page(title='SDCC', url='/microController/mcs51/sdcc/') Page(title='Hello World Asm', url='/microController/mcs51/helloWorldAsm/') Page(title='Hello World C', url='/microController/mcs51/helloWorldC/') Section(title='Contoh Project') Page(title='Count Up Led', url='/microController/mcs51/contoh/countUpLed/') Page(title='Count Up Led Asm', url='/microController/mcs51/contoh/countUpLedAsm/') Page(title='Count Down Led', url='/microController/mcs51/contoh/countDownLed/') Page(title='Count Down Led Asm', url='/microController/mcs51/contoh/countDownLedAsm/') Section(title='Lang') Section(title='C Lang') Page(title='Pengenalan', url='/lang/clang/pengenalan/') Page(title='Install', url='/lang/clang/install/') Section(title='Contoh') Page(title='Hello World', url='/lang/clang/contoh/helloWorld/') Page(title='Armstrong Number', url='/lang/clang/contoh/armstrongNumber/') Page(title='Darts', url='/lang/clang/contoh/darts/') Page(title='Resistor Color', url='/lang/clang/contoh/resistorColor/') Page(title='Resistor Color Duo', url='/lang/clang/contoh/resistorColorDuo/') Page(title='Resistor Color Trio', url='/lang/clang/contoh/resistorColorTrio/') Section(title='Nim Lang') Link(title='Pengenalan', url='lang/nim/pengenalan.md') Section(title='V Lang') Link(title='Pengenalan', url='lang/vlang/pengenalan.md') Section(title='Pascal') Link(title='Pengenalan', url='lang/pascal/pengenalan.md') Section(title='Asembly 8051') Page(title='Pengenalan', url='/lang/asm8051/pengenalan/') Section(title='Asembly AVR') Link(title='Pengenalan', url='lang/asmAvr/pengenalan.md') page Page Page(title='Makro', url='/info/')","title":"General List"},{"location":"info/#config-information","text":"Standard MkDocs configuration information. Do not try to modify. e.g. {{ config.docs_dir }} See also the MkDocs documentation on the config object . Variable Type Content config_file_path str '/home/kenzanin/Documents/riset/kenzanin.github.io/mkdocs.yml' site_name str 'Solderen' nav list [{'Home': 'index.md'}, {'About': 'about.md'}, {'Framework': [{'Arduino': [{'Pengenalan': 'framework/arduino/pengenalan.md'}, {'Install': 'framework/arduino/install.md'}, {'Setup Project': 'framework/arduino/setupProject.md'}, {'Contoh Project': [{'Blink': 'framework/arduino/contoh/blink.md'}, {'Digital Read Serial': 'framework/arduino/contoh/digitalReadSerial.md'}]}]}]}, {'Micro Controller': [{'Mcs51': [{'Pengenalan': 'microController/mcs51/pengenalan.md'}, {'Hardware': 'microController/mcs51/hardware.md'}, {'Software': [{'MCU8051IDE': 'microController/mcs51/software.md'}, {'SDCC': 'microController/mcs51/sdcc.md'}, {'Hello World Asm': 'microController/mcs51/helloWorldAsm.md'}, {'Hello World C': 'microController/mcs51/helloWorldC.md'}]}, {'Contoh Project': [{'Count Up Led': 'microController/mcs51/contoh/countUpLed.md'}, {'Count Up Led Asm': 'microController/mcs51/contoh/countUpLedAsm.md'}, {'Count Down Led': 'microController/mcs51/contoh/countDownLed.md'}, {'Count Down Led Asm': 'microController/mcs51/contoh/countDownLedAsm.md'}]}]}]}, {'Lang': [{'C Lang': [{'Pengenalan': 'lang/clang/pengenalan.md'}, {'Install': 'lang/clang/install.md'}, {'Contoh': [{'Hello World': 'lang/clang/contoh/helloWorld.md'}, {'Armstrong Number': 'lang/clang/contoh/armstrongNumber.md'}, {'Darts': 'lang/clang/contoh/darts.md'}, {'Resistor Color': 'lang/clang/contoh/resistorColor.md'}, {'Resistor Color Duo': 'lang/clang/contoh/resistorColorDuo.md'}, {'Resistor Color Trio': 'lang/clang/contoh/resistorColorTrio.md'}]}]}, {'Nim Lang': [{'Pengenalan': 'lang/nim/pengenalan.md'}]}, {'V Lang': [{'Pengenalan': 'lang/vlang/pengenalan.md'}]}, {'Pascal': [{'Pengenalan': 'lang/pascal/pengenalan.md'}]}, {'Asembly 8051': [{'Pengenalan': 'lang/asm8051/pengenalan.md'}]}, {'Asembly AVR': [{'Pengenalan': 'lang/asmAvr/pengenalan.md'}]}]}] pages NoneType None site_url str 'https://kenzanin.github.io' site_description NoneType None site_author NoneType None theme Theme Theme(name='material', dirs=['/usr/lib/python3.9/site-packages/material', '/usr/lib/python3.9/site-packages/mkdocs/templates'], static_templates=['404.html', 'sitemap.xml'], language='en', direction=None, features=['tabs', 'navigation.sections'], palette={'scheme': 'slate'}, font={'text': 'JetBrains Mono', 'code': 'consolas'}, icon=None, favicon='assets/images/favicon.png', include_search_page=False, search_index_only=True) docs_dir str '/home/kenzanin/Documents/riset/kenzanin.github.io/docs' site_dir str '/home/kenzanin/Documents/riset/kenzanin.github.io/site' copyright str 'Copyright \u00a9 2021 [Suka Isnaini]' google_analytics NoneType None dev_addr Address Address(host='127.0.0.1', port=8000) use_directory_urls bool True repo_url str 'https://github.com/kenzanin/kenzanin.github.io/' repo_name str 'GitHub' edit_uri str 'tree/main/docs/' extra_css list [] extra_javascript list [] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'pymdownx.keys', 'pymdownx.highlight', 'pymdownx.tabbed', 'pymdownx.superfences', 'pymdownx.snippets', 'admonition', 'abbr', 'pymdownx.critic', 'pymdownx.betterem', 'markdown_include.include', 'attr_list', 'footnotes', 'meta', 'pymdownx.magiclink', 'pymdownx.pathconverter', 'pymdownx.inlinehilite'] mdx_configs dict pymdownx.highlight [ dict ], pymdownx.snippets [ dict ], pymdownx.betterem [ dict ], markdown_include.include [ dict ] strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra SubConfig {'disqus': 'kenzanin-github-io', 'social': [{'icon': 'fontawesome/brands/telegram', 'link': 'https://telegram.me/kenzanin', 'name': 'kenzanin'}, {'icon': 'fontawesome/brands/whatsapp', 'link': 'https://wa.link/q6rses', 'name': 'suka isnaini'}, {'icon': 'fontawesome/solid/at', 'link': 'mailto:kenzanin@gmail.com', 'name': 'kenzanin'}]} plugins PluginCollection search [ SearchPlugin ], macros [ MacrosPlugin ], git-revision-date-localized [ GitRevisionDateLocalizedPlugin ], minify [ MinifyPlugin ]","title":"Config Information"},{"location":"info/#git-information","text":"Information available on the last commit and the git repository containing the documentation project: e.g. {{ git.message }} Variable Type Content status bool True date datetime datetime.datetime(2021, 1, 25, 14, 29, tzinfo=tzoffset(None, 25200)) short_commit str '3ed4972' commit str '3ed49722345ceb784f8f4b0120c8fdc6909b48a0' author str 'kenzanin' tag str '' date_ISO str '2021-01-25 14:29:00 +0700' message str 'jan25' raw str 'commit 3ed49722345ceb784f8f4b0120c8fdc6909b48a0\\nAuthor: kenzanin \\nDate: Mon Jan 25 14:29:00 2021 +0700\\n\\n jan25' root_dir str '/home/kenzanin/Documents/riset/kenzanin.github.io'","title":"Git Information"},{"location":"info/#page-attributes","text":"Provided by MkDocs. These attributes change for every page (the attributes shown are for this page). e.g. {{ page.title }} See also the MkDocs documentation on the page object . Variable Type Content file File page [ Page ], src_path = 'info.md', abs_src_path = '/home/kenzanin/Documents/riset/kenzanin.github.io/docs/info.md', name = 'info', dest_path = 'info/index.html', abs_dest_path = '/home/kenzanin/Documents/riset/kenzanin.github.io/site/info/index.html', url = 'info/' title str 'Makro' parent NoneType None children NoneType None previous_page NoneType None next_page NoneType None _Page__active bool False is_section bool False is_page bool True is_link bool False update_date str '2021-01-25' canonical_url str 'https://kenzanin.github.io/info/' abs_url str '/info/' edit_url str 'https://github.com/kenzanin/kenzanin.github.io/tree/main/docs/info.md' markdown str '# Makro\\n{{ macros_info() }}\\n' content NoneType None toc list [] meta dict To have all titles of all pages, use: 1 2 3 {% for page in navigation.pages %} - {{ page.title }} {% endfor% }","title":"Page Attributes"},{"location":"info/#plugin-filters","text":"These filters are provided as a standard by the macros plugin. Variable Type Content pretty function ( var_list, rows, header, e ) Default mkdocs_macro Prettify a dictionary or object (used for environment documentation, or debugging).","title":"Plugin Filters"},{"location":"info/#builtin-jinja2-filters","text":"These filters are provided by Jinja2 as a standard. See also the Jinja2 documentation on builtin filters ). Variable Type Content abs builtin_function_or_method Return the absolute value of the argument. attr function ( environment, obj, name, value ) Get an attribute of an object. foo|attr(\"bar\") works like foo.bar just that always an attribute is returned and items are not looked up. batch function ( value, linecount, fill_with, tmp, item ) A filter that batches items. It works pretty much like slice just the other way round. It returns a list of lists with the given number of items. If you provide a second parameter this is used to fill up missing items. See this example. capitalize function ( s ) Capitalize a value. The first character will be uppercase, all others lowercase. center function ( value, width ) Centers the value in a field of a given width. count builtin_function_or_method Return the number of items in a container. d function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. default function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. dictsort function ( value, case_sensitive, by, reverse, sort_func ) Sort a dict and yield (key, value) pairs. Because python dicts are unsorted you may want to use this function to order them by either key or value. e builtin_function_or_method escape(s) -> markup escape builtin_function_or_method escape(s) -> markup filesizeformat function ( value, binary, bytes, base, prefixes, i, prefix, unit ) Format the value like a 'human-readable' file size (i.e. 13 kB, 4.1 MB, 102 Bytes, etc). Per default decimal prefixes are used (Mega, Giga, etc.), if the second parameter is set to True the binary prefixes are used (Mebi, Gibi). first function ( environment, seq ) Return the first item of a sequence. float function ( value, default ) Convert the value into a floating point number. If the conversion doesn't work it will return 0.0 . You can override this default using the first parameter. forceescape function ( value ) Enforce HTML escaping. This will probably double escape variables. format function ( value, args, kwargs ) Apply the given values to a printf-style _ format string, like string % values . groupby function ( environment, value, attribute, expr ) Group a sequence of objects by an attribute using Python's :func: itertools.groupby . The attribute can use dot notation for nested access, like \"address.city\" . Unlike Python's groupby , the values are sorted first so only one group is returned for each unique value. indent function ( s, width, first, blank, indentfirst, newline, rv, lines ) Return a copy of the string with each line indented by 4 spaces. The first line and blank lines are not indented by default. int function ( value, default, base ) Convert the value into an integer. If the conversion doesn't work it will return 0 . You can override this default using the first parameter. You can also override the default base (10) in the second parameter, which handles input with prefixes such as 0b, 0o and 0x for bases 2, 8 and 16 respectively. The base is ignored for decimal numbers and non-string values. join function ( eval_ctx, value, d, attribute, do_escape, idx, item ) Return a string which is the concatenation of the strings in the sequence. The separator between elements is an empty string per default, you can define it with the optional parameter. last function ( environment, seq ) Return the last item of a sequence. length builtin_function_or_method Return the number of items in a container. list function ( value ) Convert the value into a list. If it was a string the returned list will be a list of characters. lower function ( s ) Convert a value to lowercase. map function ( args, kwargs, seq, func, item ) Applies a filter on a sequence of objects or looks up an attribute. This is useful when dealing with lists of objects but you are really only interested in a certain value of it. min function ( environment, value, case_sensitive, attribute ) Return the smallest item from the sequence. max function ( environment, value, case_sensitive, attribute ) Return the largest item from the sequence. pprint function ( value, verbose ) Pretty print a variable. Useful for debugging. random function ( context, seq ) Return a random item from the sequence. reject function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and rejecting the objects with the test succeeding. rejectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and rejecting the objects with the test succeeding. replace function ( eval_ctx, s, old, new, count ) Return a copy of the value with all occurrences of a substring replaced with a new one. The first argument is the substring that should be replaced, the second is the replacement string. If the optional third argument count is given, only the first count occurrences are replaced. reverse function ( value, rv ) Reverse the object or return an iterator that iterates over it the other way round. round function ( value, precision, method, func ) Round the number to a given precision. The first parameter specifies the precision (default is 0 ), the second the rounding method. safe function ( value ) Mark the value as safe which means that in an environment with automatic escaping enabled this variable will not be escaped. select function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and only selecting the objects with the test succeeding. selectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and only selecting the objects with the test succeeding. slice function ( value, slices, fill_with, seq, length, items_per_slice, slices_with_extra, offset, slice_number, start, end, tmp ) Slice an iterator and return a list of lists containing those items. Useful if you want to create a div containing three ul tags that represent columns. sort function ( environment, value, reverse, case_sensitive, attribute, key_func ) Sort an iterable using Python's :func: sorted . string builtin_function_or_method soft_unicode(object) -> string striptags function ( value ) Strip SGML/XML tags and replace adjacent whitespace by one space. sum function ( environment, iterable, attribute, start ) Returns the sum of a sequence of numbers plus the value of parameter 'start' (which defaults to 0). When the sequence is empty it returns start. title function ( s ) Return a titlecased version of the value. I.e. words will start with uppercase letters, all remaining characters are lowercase. trim function ( value, chars ) Strip leading and trailing characters, by default whitespace. truncate function ( env, s, length, killwords, end, leeway, result ) Return a truncated copy of the string. The length is specified with the first parameter which defaults to 255 . If the second parameter is true the filter will cut the text at length. Otherwise it will discard the last word. If the text was in fact truncated it will append an ellipsis sign ( \"...\" ). If you want a different ellipsis sign than \"...\" you can specify it using the third parameter. Strings that only exceed the length by the tolerance margin given in the fourth parameter will not be truncated. unique function ( environment, value, case_sensitive, attribute, getter, seen, item, key ) Returns a list of unique items from the given iterable. upper function ( s ) Convert a value to uppercase. urlencode function ( value, items ) Quote data for use in a URL path or query using UTF-8. urlize function ( eval_ctx, value, trim_url_limit, nofollow, target, rel, policies, rv ) Converts URLs in plain text into clickable links. wordcount function ( s ) Count the words in that string. wordwrap function ( environment, s, width, break_long_words, wrapstring, break_on_hyphens ) Wrap a string to the given width. Existing newlines are treated as paragraphs to be wrapped separately. xmlattr function ( _eval_ctx, d, autospace, rv ) Create an SGML/XML attribute string based on the items in a dict. All values that are neither none nor undefined are automatically escaped. tojson function ( eval_ctx, value, indent, policies, dumper, options ) Dumps a structure to JSON so that it's safe to use in <script> tags. It accepts the same arguments and returns a JSON string. Note that this is available in templates through the |tojson filter which will also mark the result as safe. Due to how this function escapes certain characters this is safe even if used outside of <script> tags.","title":"Builtin Jinja2 Filters"},{"location":"variables/","text":"","title":"Variables"},{"location":"framework/arduino/install/","text":"Cara install Arduino IDE bisa diinstall di PC atau juga bisa digunakan secara cloud (internet). Tentu saja untuk warga minim quota cara offline lebih baik dibanding cara cloud hehe. Berikut cara install Arduino secara Offline. Download Arduino IDE Install Arduino IDE Download Arduino Arduino bisa di download secara gratis di official sitenya https://www.arduino.cc/en/software ada beberapa versi yang bisa digunakan disini untuk user \"biasa\" versi stable sudah lebih dari cukup untuk memulai. Selanjutnya pilih file yang sesuai dengan OS dan CPU kita. pilihan yang disediakan cukup lengkap mulai dari MacOS, Windows (win7 keatas) dan linux. selain pengguna OS tersebut, bisa menggunakan Arduino IDE Cloud. Install di Linux (Artix) Untuk major Linux distro Arduino sudah ada di repo masing-masing. untuk install tinggal jalankan package manager, untuk Artix bisa menggunakan pacman -S arduino system akan segera mendownload dan meng install Arduino untuk system-wide users. namum bagi saya menginstall Arduino di home merupakan cara terbaik dikarenakan versi Arduino yang didapatkan dengan cara mendownload dari official site lebih stabil karena mempertahankan komponen pendukung seperti java-jre yang dipakai oleh Arduino IDE. Untuk menginstall Arduino di home download Arduino yang sesuai dengan arch CPU dan extract di /home/<user>/opt terdapat file setup.sh di dalam folder tersebut, gunakan jika ingin mendapatkan shortcut pada start menu. install di windows (win 7 ke atas) Download dari official website dan jalankan. tekan next - next - next done hehe.","title":"Install"},{"location":"framework/arduino/install/#cara-install","text":"Arduino IDE bisa diinstall di PC atau juga bisa digunakan secara cloud (internet). Tentu saja untuk warga minim quota cara offline lebih baik dibanding cara cloud hehe. Berikut cara install Arduino secara Offline. Download Arduino IDE Install Arduino IDE","title":"Cara install"},{"location":"framework/arduino/install/#download-arduino","text":"Arduino bisa di download secara gratis di official sitenya https://www.arduino.cc/en/software ada beberapa versi yang bisa digunakan disini untuk user \"biasa\" versi stable sudah lebih dari cukup untuk memulai. Selanjutnya pilih file yang sesuai dengan OS dan CPU kita. pilihan yang disediakan cukup lengkap mulai dari MacOS, Windows (win7 keatas) dan linux. selain pengguna OS tersebut, bisa menggunakan Arduino IDE Cloud.","title":"Download Arduino"},{"location":"framework/arduino/install/#install-di-linux-artix","text":"Untuk major Linux distro Arduino sudah ada di repo masing-masing. untuk install tinggal jalankan package manager, untuk Artix bisa menggunakan pacman -S arduino system akan segera mendownload dan meng install Arduino untuk system-wide users. namum bagi saya menginstall Arduino di home merupakan cara terbaik dikarenakan versi Arduino yang didapatkan dengan cara mendownload dari official site lebih stabil karena mempertahankan komponen pendukung seperti java-jre yang dipakai oleh Arduino IDE. Untuk menginstall Arduino di home download Arduino yang sesuai dengan arch CPU dan extract di /home/<user>/opt terdapat file setup.sh di dalam folder tersebut, gunakan jika ingin mendapatkan shortcut pada start menu.","title":"Install di Linux (Artix)"},{"location":"framework/arduino/install/#install-di-windows-win-7-ke-atas","text":"Download dari official website dan jalankan. tekan next - next - next done hehe.","title":"install di windows (win 7 ke atas)"},{"location":"framework/arduino/pengenalan/","text":"Pengenalan Arduino Apa itu Arduino Arduino merupakan perusahaan yang bergerak dibidang pembuatan modul dan framework untuk beberapa jenis microController diantaranya AVR ATSAM Intel dan mungkin beberapa jenis MCU lain. Yang membuat Arduino berbeda dari beberapa vendor yang lain adalah sifatnya yang Open-Source dan dedikasi dari para pendiri dan kontributor yang fokus untuk kemudahan pemakaian bagi para pemula. meskipun ini berarti beberapa fungsi harus kehilangan effisiensi untuk mengejar kemudahan. Board kw? Seiring waktu pengguna dan kontributor dari Arduino semakin bertambah dan board alternative pun bermunculan, selain memberikan harga yang mungkin lebih murah juga menyediakan solusi untuk kebutuhan tertentu, Apakah hal ini legal? ternyata Arduino memberikan kebebasan untuk pihak lain membuat duplikat atau dan board extension untuk product nya selama tidak meyertakan nama Arduino di board. karena itu biasanya tulisan Arduino compatible cuma ada di deskripsi link penjual bukan di cetak di board nya.","title":"Pengenalan"},{"location":"framework/arduino/pengenalan/#pengenalan-arduino","text":"","title":"Pengenalan Arduino"},{"location":"framework/arduino/pengenalan/#apa-itu-arduino","text":"Arduino merupakan perusahaan yang bergerak dibidang pembuatan modul dan framework untuk beberapa jenis microController diantaranya AVR ATSAM Intel dan mungkin beberapa jenis MCU lain. Yang membuat Arduino berbeda dari beberapa vendor yang lain adalah sifatnya yang Open-Source dan dedikasi dari para pendiri dan kontributor yang fokus untuk kemudahan pemakaian bagi para pemula. meskipun ini berarti beberapa fungsi harus kehilangan effisiensi untuk mengejar kemudahan.","title":"Apa itu Arduino"},{"location":"framework/arduino/pengenalan/#board-kw","text":"Seiring waktu pengguna dan kontributor dari Arduino semakin bertambah dan board alternative pun bermunculan, selain memberikan harga yang mungkin lebih murah juga menyediakan solusi untuk kebutuhan tertentu, Apakah hal ini legal? ternyata Arduino memberikan kebebasan untuk pihak lain membuat duplikat atau dan board extension untuk product nya selama tidak meyertakan nama Arduino di board. karena itu biasanya tulisan Arduino compatible cuma ada di deskripsi link penjual bukan di cetak di board nya.","title":"Board kw?"},{"location":"framework/arduino/setupProject/","text":"Membuat Project Baru Membuat project baru sangat mudah di Arduino IDE. Munkin ini yang menjadi daya tarik Arduino berikut 4 tahap dalam pemubatan project Buat folder kosong. Jalankan Arduino IDE dan pilih File Save As atau dengan shortcut Ctrl+Shift+S. Simpan di folder kosong pada step 1. gunakan nama yang mudah di ingat pendek dan tanpa spasi. Pilih board yang sesuai jika menggunakan board Arduino Nano baik ori atau kw pilih Tool -> Board: \"xxxx\" -> Arduino Nano. Maka pilihan Board: akan menjadi Board: \"Arduino Nano\"","title":"Setup Project"},{"location":"framework/arduino/setupProject/#membuat-project-baru","text":"Membuat project baru sangat mudah di Arduino IDE. Munkin ini yang menjadi daya tarik Arduino berikut 4 tahap dalam pemubatan project Buat folder kosong. Jalankan Arduino IDE dan pilih File Save As atau dengan shortcut Ctrl+Shift+S. Simpan di folder kosong pada step 1. gunakan nama yang mudah di ingat pendek dan tanpa spasi. Pilih board yang sesuai jika menggunakan board Arduino Nano baik ori atau kw pilih Tool -> Board: \"xxxx\" -> Arduino Nano. Maka pilihan Board: akan menjadi Board: \"Arduino Nano\"","title":"Membuat Project Baru"},{"location":"framework/arduino/variables/","text":"","title":"Variables"},{"location":"framework/arduino/contoh/blink/","text":"Blink alias Hello World Contoh ini digunakan untuk menyalakan dan mematikan LED yang ada diboard arduino dengan interval 1000ms. Code ini diambil langsung dari contoh yang disedikan Arduino IDE. hmmm agak malas? hehe. bisa jadi tapi contoh ini perlu di copas \"as is\" karena banyak yang tidak tahu bahwa Arduino IDE udah disertai contoh. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 /* Blink Turns an LED on for one second, then off for one second, repeatedly. Most Arduinos have an on-board LED you can control. On the UNO, MEGA and ZERO it is attached to digital pin 13, on MKR1000 on pin 6. LED_BUILTIN is set to the correct LED pin independent of which board is used. If you want to know what pin the on-board LED is connected to on your Arduino model, check the Technical Specs of your board at: https://www.arduino.cc/en/Main/Products modified 8 May 2014 by Scott Fitzgerald modified 2 Sep 2016 by Arturo Guadalupi modified 8 Sep 2016 by Colby Newman This example code is in the public domain. http://www.arduino.cc/en/Tutorial/Blink */ // the setup function runs once when you press reset or power the board void setup () { // initialize digital pin LED_BUILTIN as an output. pinMode ( LED_BUILTIN , OUTPUT ); } // the loop function runs over and over again forever void loop () { digitalWrite ( LED_BUILTIN , HIGH ); // turn the LED on (HIGH is the voltage level) delay ( 1000 ); // wait for a second digitalWrite ( LED_BUILTIN , LOW ); // turn the LED off by making the voltage LOW delay ( 1000 ); // wait for a second }","title":"Blink"},{"location":"framework/arduino/contoh/blink/#blink-alias-hello-world","text":"Contoh ini digunakan untuk menyalakan dan mematikan LED yang ada diboard arduino dengan interval 1000ms. Code ini diambil langsung dari contoh yang disedikan Arduino IDE. hmmm agak malas? hehe. bisa jadi tapi contoh ini perlu di copas \"as is\" karena banyak yang tidak tahu bahwa Arduino IDE udah disertai contoh. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 /* Blink Turns an LED on for one second, then off for one second, repeatedly. Most Arduinos have an on-board LED you can control. On the UNO, MEGA and ZERO it is attached to digital pin 13, on MKR1000 on pin 6. LED_BUILTIN is set to the correct LED pin independent of which board is used. If you want to know what pin the on-board LED is connected to on your Arduino model, check the Technical Specs of your board at: https://www.arduino.cc/en/Main/Products modified 8 May 2014 by Scott Fitzgerald modified 2 Sep 2016 by Arturo Guadalupi modified 8 Sep 2016 by Colby Newman This example code is in the public domain. http://www.arduino.cc/en/Tutorial/Blink */ // the setup function runs once when you press reset or power the board void setup () { // initialize digital pin LED_BUILTIN as an output. pinMode ( LED_BUILTIN , OUTPUT ); } // the loop function runs over and over again forever void loop () { digitalWrite ( LED_BUILTIN , HIGH ); // turn the LED on (HIGH is the voltage level) delay ( 1000 ); // wait for a second digitalWrite ( LED_BUILTIN , LOW ); // turn the LED off by making the voltage LOW delay ( 1000 ); // wait for a second }","title":"Blink alias Hello World"},{"location":"framework/arduino/contoh/digitalReadSerial/","text":"Digital Read Serial 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /* DigitalReadSerial Reads a digital input on pin 2, prints the result to the Serial Monitor This example code is in the public domain. http://www.arduino.cc/en/Tutorial/DigitalReadSerial */ // digital pin 2 has a pushbutton attached to it. Give it a name: int pushButton = 2 ; // the setup routine runs once when you press reset: void setup () { // initialize serial communication at 9600 bits per second: Serial . begin ( 9600 ); // make the pushbutton's pin an input: pinMode ( pushButton , INPUT ); } // the loop routine runs over and over again forever: void loop () { // read the input pin: int buttonState = digitalRead ( pushButton ); // print out the state of the button: Serial . println ( buttonState ); delay ( 1 ); // delay in between reads for stability }","title":"Digital Read Serial"},{"location":"framework/arduino/contoh/digitalReadSerial/#digital-read-serial","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /* DigitalReadSerial Reads a digital input on pin 2, prints the result to the Serial Monitor This example code is in the public domain. http://www.arduino.cc/en/Tutorial/DigitalReadSerial */ // digital pin 2 has a pushbutton attached to it. Give it a name: int pushButton = 2 ; // the setup routine runs once when you press reset: void setup () { // initialize serial communication at 9600 bits per second: Serial . begin ( 9600 ); // make the pushbutton's pin an input: pinMode ( pushButton , INPUT ); } // the loop routine runs over and over again forever: void loop () { // read the input pin: int buttonState = digitalRead ( pushButton ); // print out the state of the button: Serial . println ( buttonState ); delay ( 1 ); // delay in between reads for stability }","title":"Digital Read Serial"},{"location":"include/disqus/","text":"var disqus_config = function () { this.page.url = 'https://kenzanin.github.io/include/disqus/'; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = 'include/disqus/'; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://kenzanin-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus.","title":"Disqus"},{"location":"lang/asm8051/pengenalan/","text":"","title":"Pengenalan"},{"location":"lang/clang/install/","text":"Instalasi C compiler C compiler digunakan untuk menterjemahkan bahasa C yang kita ketik(atau copas :D) untuk menjadi sebuah file executable file ini biasanya berakhiran .exe pada windows atau berakhiran bebas jika menggunakan Linux . Ada banyak compiler baik free atau berbayar yang bisa digunakan, baik di Windows, Linux, atau MacOs. kali ini kita akan fokus untuk menginstall C compiler pada linux atau lebih tepat nya Artix Linux . Pada Artix C compiler yang tersedia antara lain Clang GCC tcc Intel C compiler AMD C compiler Dll Tidak perlu semua Compiler diinstall cukup pilih satu saja dan untuk compatibilitas GCC merupakan compiler yang paling banyak dipakai selanjutnya Clang. Pada komputer saya saya menggunakan GCC, Clang dan tcc. Untuk GCC pada artix di sediakan dalam package group base-devel sedang untuk Clang bisa diinstall terpisah. installasi GCC 1 sudo pacman -S base-devel gdb --needed installasi Clang 1 sudo pacman -S base-devel clang lldb Check C compiler yang terinstall Untuk pemeriksaan dasar di linux cukup mudah karena compiler terinstall secara system-wide dan berbagai tool sudah diinstall di PATH nya jadi tinggal gunakan terminal yang ada dan ketik gcc -v atau clang -v saja. Jalankan terminal (lxterminal) ketik gcc -v 1 2 3 4 5 6 7 8 9 10 kenzanin@artix | ~ ) gcc -v Using built-in specs. COLLECT_GCC = /usr/bin/gcc COLLECT_LTO_WRAPPER = /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/lto-wrapper Target: x86_64-pc-linux-gnu Configured with: /build/gcc/src/gcc/configure --prefix = /usr --libdir = /usr/lib --libexecdir = /usr/lib --mandir = /usr/share/man --infodir = /usr/share/info --with-bugurl = https://bugs.archlinux.org/ --enable-languages = c,c++,ada,fortran,go,lto,objc,obj-c++,d --with-isl --with-linker-hash-style = gnu --with-system-zlib --enable-__cxa_atexit --enable-cet = auto --enable-checking = release --enable-clocale = gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-install-libiberty --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads = posix --disable-libssp --disable-libstdcxx-pch --disable-libunwind-exceptions --disable-werror gdc_include_dir = /usr/include/dlang/gdc Thread model: posix Supported LTO compression algorithms: zlib zstd gcc version 10 .2.0 ( GCC ) Jika pada tahap 2 muncul tulisan tersebut berarti GCC siap digunakan.","title":"Install"},{"location":"lang/clang/install/#instalasi-c-compiler","text":"C compiler digunakan untuk menterjemahkan bahasa C yang kita ketik(atau copas :D) untuk menjadi sebuah file executable file ini biasanya berakhiran .exe pada windows atau berakhiran bebas jika menggunakan Linux . Ada banyak compiler baik free atau berbayar yang bisa digunakan, baik di Windows, Linux, atau MacOs. kali ini kita akan fokus untuk menginstall C compiler pada linux atau lebih tepat nya Artix Linux . Pada Artix C compiler yang tersedia antara lain Clang GCC tcc Intel C compiler AMD C compiler Dll Tidak perlu semua Compiler diinstall cukup pilih satu saja dan untuk compatibilitas GCC merupakan compiler yang paling banyak dipakai selanjutnya Clang. Pada komputer saya saya menggunakan GCC, Clang dan tcc. Untuk GCC pada artix di sediakan dalam package group base-devel sedang untuk Clang bisa diinstall terpisah. installasi GCC 1 sudo pacman -S base-devel gdb --needed installasi Clang 1 sudo pacman -S base-devel clang lldb","title":"Instalasi C compiler"},{"location":"lang/clang/install/#check-c-compiler-yang-terinstall","text":"Untuk pemeriksaan dasar di linux cukup mudah karena compiler terinstall secara system-wide dan berbagai tool sudah diinstall di PATH nya jadi tinggal gunakan terminal yang ada dan ketik gcc -v atau clang -v saja. Jalankan terminal (lxterminal) ketik gcc -v 1 2 3 4 5 6 7 8 9 10 kenzanin@artix | ~ ) gcc -v Using built-in specs. COLLECT_GCC = /usr/bin/gcc COLLECT_LTO_WRAPPER = /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/lto-wrapper Target: x86_64-pc-linux-gnu Configured with: /build/gcc/src/gcc/configure --prefix = /usr --libdir = /usr/lib --libexecdir = /usr/lib --mandir = /usr/share/man --infodir = /usr/share/info --with-bugurl = https://bugs.archlinux.org/ --enable-languages = c,c++,ada,fortran,go,lto,objc,obj-c++,d --with-isl --with-linker-hash-style = gnu --with-system-zlib --enable-__cxa_atexit --enable-cet = auto --enable-checking = release --enable-clocale = gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-install-libiberty --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads = posix --disable-libssp --disable-libstdcxx-pch --disable-libunwind-exceptions --disable-werror gdc_include_dir = /usr/include/dlang/gdc Thread model: posix Supported LTO compression algorithms: zlib zstd gcc version 10 .2.0 ( GCC ) Jika pada tahap 2 muncul tulisan tersebut berarti GCC siap digunakan.","title":"Check C compiler yang terinstall"},{"location":"lang/clang/pengenalan/","text":"C language Well apa yang mau dikenalkan dari bahasa pemograman C? C merupakan mata pelajaran wajib di beberapa jurusan di universitas dan ini bukan karena kemudahan nya tapi karena C merupakan lanjutan dari pelajaran assembly atau belajar C untuk mendalami assembly. karena itu C sering disebut sebagai bahasa tingkat menengah. Hello World Hello World, klo ada survey pogram yang sering di bikin di bumi ini pasti hello Word nomer 1st hehehe. pogram ini hanya untuk mencetak kata \"Hello World\" dilayar. tapi proses behind the schene nya jauh lebih penting, karena tujuan sebenarnya adalah untuk memastikan installasi C compiler kita sudah berjalan dengan baik. Sebelum masuk ke contoh programming hal pertama yang perlu dikerjakan adalah menginstall C compiler itu sendiri.","title":"Pengenalan"},{"location":"lang/clang/pengenalan/#c-language","text":"Well apa yang mau dikenalkan dari bahasa pemograman C? C merupakan mata pelajaran wajib di beberapa jurusan di universitas dan ini bukan karena kemudahan nya tapi karena C merupakan lanjutan dari pelajaran assembly atau belajar C untuk mendalami assembly. karena itu C sering disebut sebagai bahasa tingkat menengah.","title":"C language"},{"location":"lang/clang/pengenalan/#hello-world","text":"Hello World, klo ada survey pogram yang sering di bikin di bumi ini pasti hello Word nomer 1st hehehe. pogram ini hanya untuk mencetak kata \"Hello World\" dilayar. tapi proses behind the schene nya jauh lebih penting, karena tujuan sebenarnya adalah untuk memastikan installasi C compiler kita sudah berjalan dengan baik. Sebelum masuk ke contoh programming hal pertama yang perlu dikerjakan adalah menginstall C compiler itu sendiri.","title":"Hello World"},{"location":"lang/clang/contoh/armstrongNumber/","text":"Armstrong Number Apa itu? An Armstrong number is a number that is the sum of its own digits each raised to the power of the number of digits. For example: 9 is an Armstrong number, because 9 = 9^1 = 9 10 is not an Armstrong number, because 10 != 1^2 + 0^2 = 1 153 is an Armstrong number, because: 153 = 1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153 154 is not an Armstrong number, because: 154 != 1^3 + 5^3 + 4^3 = 1 + 125 + 64 = 190 Task Write some code to determine whether a number is an Armstrong number. The Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include \"armstrong_numbers.h\" #include <math.h> bool is_armstrong_number ( int candidate ) { if ( candidate < 10 ) return 1 ; int count = 1 ; int var01 = candidate ; while ( var01 > 10 ) { var01 /= 10 ; count ++ ; } var01 = candidate ; int var02 = 0 ; int i ; for ( i = 0 ; i <= count ; i ++ ) { var02 += ( pow (( var01 % 10 ), count )); var01 /= 10 ; } return ( var02 == candidate ); }","title":"Armstrong Number"},{"location":"lang/clang/contoh/armstrongNumber/#armstrong-number","text":"","title":"Armstrong Number"},{"location":"lang/clang/contoh/armstrongNumber/#apa-itu","text":"An Armstrong number is a number that is the sum of its own digits each raised to the power of the number of digits. For example: 9 is an Armstrong number, because 9 = 9^1 = 9 10 is not an Armstrong number, because 10 != 1^2 + 0^2 = 1 153 is an Armstrong number, because: 153 = 1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153 154 is not an Armstrong number, because: 154 != 1^3 + 5^3 + 4^3 = 1 + 125 + 64 = 190","title":"Apa itu?"},{"location":"lang/clang/contoh/armstrongNumber/#task","text":"Write some code to determine whether a number is an Armstrong number.","title":"Task"},{"location":"lang/clang/contoh/armstrongNumber/#the-code","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include \"armstrong_numbers.h\" #include <math.h> bool is_armstrong_number ( int candidate ) { if ( candidate < 10 ) return 1 ; int count = 1 ; int var01 = candidate ; while ( var01 > 10 ) { var01 /= 10 ; count ++ ; } var01 = candidate ; int var02 = 0 ; int i ; for ( i = 0 ; i <= count ; i ++ ) { var02 += ( pow (( var01 % 10 ), count )); var01 /= 10 ; } return ( var02 == candidate ); }","title":"The Code"},{"location":"lang/clang/contoh/darts/","text":"Dart Intro Write a function that returns the earned points in a single toss of a Darts game. Darts is a game where players throw darts to a target. In our particular instance of the game, the target rewards with 4 different amounts of points, depending on where the dart lands: If the dart lands outside the target, player earns no points (0 points). If the dart lands in the outer circle of the target, player earns 1 point. If the dart lands in the middle circle of the target, player earns 5 points. If the dart lands in the inner circle of the target, player earns 10 points. The outer circle has a radius of 10 units (This is equivalent to the total radius for the entire target), the middle circle a radius of 5 units, and the inner circle a radius of 1. Of course, they are all centered to the same point (That is, the circles are concentric) defined by the coordinates (0, 0). Task Write a function that given a point in the target (defined by its real cartesian coordinates x and y), returns the correct amount earned by a dart landing in that point. The Code darts.h 1 2 3 4 5 6 7 8 9 10 11 12 #ifndef DARTS_H #define DARTS_H typedef struct coordinate { double x ; double y ; } coordinate_t ; int score ( coordinate_t test ); #endif darts.c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include \"darts.h\" #include <math.h> int score ( coordinate_t test ) { float var01 = 0 ; var01 = pow ( test . x , 2 ) + pow ( test . y , 2 ); var01 = sqrt ( var01 ); if ( var01 <= 1.0 ) { return 10 ; } else if ( var01 >= 1.1 && var01 <= 5.0 ) { return 5 ; } else if ( var01 <= 10.0 && var01 >= 5.1 ){ return 1 ; } return 0 ; }","title":"Darts"},{"location":"lang/clang/contoh/darts/#dart","text":"","title":"Dart"},{"location":"lang/clang/contoh/darts/#intro","text":"Write a function that returns the earned points in a single toss of a Darts game. Darts is a game where players throw darts to a target. In our particular instance of the game, the target rewards with 4 different amounts of points, depending on where the dart lands: If the dart lands outside the target, player earns no points (0 points). If the dart lands in the outer circle of the target, player earns 1 point. If the dart lands in the middle circle of the target, player earns 5 points. If the dart lands in the inner circle of the target, player earns 10 points. The outer circle has a radius of 10 units (This is equivalent to the total radius for the entire target), the middle circle a radius of 5 units, and the inner circle a radius of 1. Of course, they are all centered to the same point (That is, the circles are concentric) defined by the coordinates (0, 0).","title":"Intro"},{"location":"lang/clang/contoh/darts/#task","text":"Write a function that given a point in the target (defined by its real cartesian coordinates x and y), returns the correct amount earned by a dart landing in that point.","title":"Task"},{"location":"lang/clang/contoh/darts/#the-code","text":"darts.h 1 2 3 4 5 6 7 8 9 10 11 12 #ifndef DARTS_H #define DARTS_H typedef struct coordinate { double x ; double y ; } coordinate_t ; int score ( coordinate_t test ); #endif darts.c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include \"darts.h\" #include <math.h> int score ( coordinate_t test ) { float var01 = 0 ; var01 = pow ( test . x , 2 ) + pow ( test . y , 2 ); var01 = sqrt ( var01 ); if ( var01 <= 1.0 ) { return 10 ; } else if ( var01 >= 1.1 && var01 <= 5.0 ) { return 5 ; } else if ( var01 <= 10.0 && var01 >= 5.1 ){ return 1 ; } return 0 ; }","title":"The Code"},{"location":"lang/clang/contoh/helloWorld/","text":"Hello World Pogram yang paling sering dibuat di bumi hehehe. Siapkan Source code siapkan folder kosong dan buatlah file dengan nama helloWorld.c buka dengan text editor dan ketik/copas baris pogram dibawah ini. 1 2 3 4 5 6 7 8 9 10 11 /* Pogram hello world keren. */ #include <stdio.h> int main ( void ) { printf ( \"Hello World \\n \" ); return 0 ; } Compile dengan GCC Pada tahap ini file helloWorld.c yang sudah disiapkan akan di baca oleh GCC dan dirubah menjadi format executable. 1 2 3 $ gcc -o helloWorld helloWorld.c $ ./helloWorld $ Hello World Compile dengan GCC dan Make Make merupakan Build system yang umum digunakan. jika menggunakan make untuk mengcompile satu file saja cukup menggunakan perintah 1 2 3 $ make helloWorld $ ./helloWorld $ Hello World The Exercism.io Ways Pada contoh C yang ada di situs ini menggunakan contoh soal yang disediakan oleh Exercism.io , Exercism.io menyediakan beberapa soal latihan untuk berbagai jenis bahasa pemograman, selain soal latihan Exercism.io juga memberikan tempat bagi komunitas untuk berdikusi dan membandingkan solusi dari coding mereka. in short just join (for free) and have fun. Cara yang dipakai di Exercism.io agak berbeda dengan cara yang sudah saya tunjukkan sebelum nya, meskipun juga menggunakan Make namun selain mengcompile source, Make juga digunakan untuk memeriksa apakah pogram yang kita buat sudah sesuai dengan harapan mereka melalui unittest. Join Exercism.io Tentu saja untuk menikmati fasilitas di Exercism.io kita harus menjadi anggota nya. cukup sederhana juga cara daftarnya jika bisa daftar gmail pasti bisa daftar Exercism.io Setup Tool Exercism.io memberikan tool bantuan untuk bisa menggunakan course nya di desktop. tentu saja tool ini tidak diperlukan jika menggunakan fasilitas web/cloud but saya paling ndak bisa ngoding di hp atau di web hehe. Download tool nya dan extact file exercism ke /usr/local/bin buka terminal dan jalankan perintah 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 $ exercism --help A command-line interface for the v2 redesign of Exercism. Download exercises and submit your solutions. Usage: [ command ] Available Commands: configure Configure the command-line client. download Download an exercise. help Help about any command open Open an exercise on the website. prepare Prepare does setup for Exercism and its tracks. submit Submit your solution to an exercise. troubleshoot Troubleshoot does a diagnostic self-check. upgrade Upgrade to the latest version of the CLI. version Version outputs the version of CLI. workspace Print out the path to your Exercism workspace. Flags: -h, --help help for this command --timeout int override the default HTTP timeout ( seconds ) --unmask-token will unmask the API during a request/response dump -v, --verbose verbose output Use \" [command] --help\" for more information about a command. Pilih C course Pilih course/tracks yang diinginkan saya mulai dengan C, C++, Nim, Python, Bash, Lua, Go dan x86_64 Assembly. hehe. Mari mulai dengan C tracks pertama yang kita kerjakan adalah Hello World. Buka tracks Hello World dan gunakan tombol download untuk meng-copy perintah exercism tool, Buka terminal dan ketik perintah ini 1 $ exercism download --exercise = hello-world --track = c maka secara ostosmastis exercism akan mendownload exercise hello-world ke folder default nya /home/<user>/exercism/c (exercism workspace)tunggu apa lagi hehe. Buka workspace cari file README.md file tersebut merupakan file dengan format markdown dan berisi petunjuk kerja. Buka folder hello-world/src pada umumnya akan terdapat dua file dengan extension .c dan .h dimana .c merupakan file source code nya dan .h merupakan headernya. Start Working OK! Baca Perintah Buka file hello-world.c dengan text file editor favoritmu pada file Readme.md terdapat perintah untuk 1 2 3 4 5 The objectives are simple: - Write a function that returns the string \"Hello, World!\". - Run the test suite and make sure that it succeeds. - Submit your solution and check it at the website. Kurang lebih artinya buka file hello-world.c edit supaya saat dicompile dan dijalankan keluar kata \"hello World!\" ingat tugas ini case sensitive. Edit File Edit file hello_world.c sehingga menjadi seperti dibawah ini 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Include the standard definitions header from the standard library, so that we // have access to 'NULL'. This can be removed if your changes remove the need // for 'NULL'. #include <stddef.h> #include \"hello_world.h\" // Define the function itself. const char * hello ( void ) { // To fix this function, change the return statement here to instead return // a string equivalent to the string expected by the failing test. return \"Hello, World!\" ; } Make/Compile arahkan terminal ke folder induk tracks, tempat dimana terdapat file Makefile dan jalankan 1 2 3 4 5 6 $ make test/test_hello_world.c:32:test_say_hi:PASS ----------------------- 1 Tests 0 Failures 0 Ignored OK Kirim Jawaban ke Exercism.io jika ada tulisan 0 Failures pada step Make/Compile maka tracks udah selesai dan siap dikirim. Kirim jawaban dengan tool exercism menggunakan option summit 1 2 3 4 5 6 7 $ exercism submit src/hello_world.c Your solution has been submitted successfully. You can complete the exercise and unlock the next core exercise at: https://exercism.io/my/solutions/57145772eb7542539928bf880ee02cb7 Completing tracks Buka lagi situs Exercism.io login jika belum dan buka exercise pada sub bab Pilih C Source tekan tombol complete this solution . sekarang buka tracks selanjutnya hehehe. Goodluck","title":"Hello World"},{"location":"lang/clang/contoh/helloWorld/#hello-world","text":"Pogram yang paling sering dibuat di bumi hehehe.","title":"Hello World"},{"location":"lang/clang/contoh/helloWorld/#siapkan-source-code","text":"siapkan folder kosong dan buatlah file dengan nama helloWorld.c buka dengan text editor dan ketik/copas baris pogram dibawah ini. 1 2 3 4 5 6 7 8 9 10 11 /* Pogram hello world keren. */ #include <stdio.h> int main ( void ) { printf ( \"Hello World \\n \" ); return 0 ; }","title":"Siapkan Source code"},{"location":"lang/clang/contoh/helloWorld/#compile-dengan-gcc","text":"Pada tahap ini file helloWorld.c yang sudah disiapkan akan di baca oleh GCC dan dirubah menjadi format executable. 1 2 3 $ gcc -o helloWorld helloWorld.c $ ./helloWorld $ Hello World","title":"Compile dengan GCC"},{"location":"lang/clang/contoh/helloWorld/#compile-dengan-gcc-dan-make","text":"Make merupakan Build system yang umum digunakan. jika menggunakan make untuk mengcompile satu file saja cukup menggunakan perintah 1 2 3 $ make helloWorld $ ./helloWorld $ Hello World","title":"Compile dengan GCC dan Make"},{"location":"lang/clang/contoh/helloWorld/#the-exercismio-ways","text":"Pada contoh C yang ada di situs ini menggunakan contoh soal yang disediakan oleh Exercism.io , Exercism.io menyediakan beberapa soal latihan untuk berbagai jenis bahasa pemograman, selain soal latihan Exercism.io juga memberikan tempat bagi komunitas untuk berdikusi dan membandingkan solusi dari coding mereka. in short just join (for free) and have fun. Cara yang dipakai di Exercism.io agak berbeda dengan cara yang sudah saya tunjukkan sebelum nya, meskipun juga menggunakan Make namun selain mengcompile source, Make juga digunakan untuk memeriksa apakah pogram yang kita buat sudah sesuai dengan harapan mereka melalui unittest.","title":"The Exercism.io Ways"},{"location":"lang/clang/contoh/helloWorld/#join-exercismio","text":"Tentu saja untuk menikmati fasilitas di Exercism.io kita harus menjadi anggota nya. cukup sederhana juga cara daftarnya jika bisa daftar gmail pasti bisa daftar Exercism.io","title":"Join Exercism.io"},{"location":"lang/clang/contoh/helloWorld/#setup-tool","text":"Exercism.io memberikan tool bantuan untuk bisa menggunakan course nya di desktop. tentu saja tool ini tidak diperlukan jika menggunakan fasilitas web/cloud but saya paling ndak bisa ngoding di hp atau di web hehe. Download tool nya dan extact file exercism ke /usr/local/bin buka terminal dan jalankan perintah 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 $ exercism --help A command-line interface for the v2 redesign of Exercism. Download exercises and submit your solutions. Usage: [ command ] Available Commands: configure Configure the command-line client. download Download an exercise. help Help about any command open Open an exercise on the website. prepare Prepare does setup for Exercism and its tracks. submit Submit your solution to an exercise. troubleshoot Troubleshoot does a diagnostic self-check. upgrade Upgrade to the latest version of the CLI. version Version outputs the version of CLI. workspace Print out the path to your Exercism workspace. Flags: -h, --help help for this command --timeout int override the default HTTP timeout ( seconds ) --unmask-token will unmask the API during a request/response dump -v, --verbose verbose output Use \" [command] --help\" for more information about a command.","title":"Setup Tool"},{"location":"lang/clang/contoh/helloWorld/#pilih-c-course","text":"Pilih course/tracks yang diinginkan saya mulai dengan C, C++, Nim, Python, Bash, Lua, Go dan x86_64 Assembly. hehe. Mari mulai dengan C tracks pertama yang kita kerjakan adalah Hello World. Buka tracks Hello World dan gunakan tombol download untuk meng-copy perintah exercism tool, Buka terminal dan ketik perintah ini 1 $ exercism download --exercise = hello-world --track = c maka secara ostosmastis exercism akan mendownload exercise hello-world ke folder default nya /home/<user>/exercism/c (exercism workspace)tunggu apa lagi hehe. Buka workspace cari file README.md file tersebut merupakan file dengan format markdown dan berisi petunjuk kerja. Buka folder hello-world/src pada umumnya akan terdapat dua file dengan extension .c dan .h dimana .c merupakan file source code nya dan .h merupakan headernya.","title":"Pilih C course"},{"location":"lang/clang/contoh/helloWorld/#start-working","text":"OK!","title":"Start Working"},{"location":"lang/clang/contoh/helloWorld/#baca-perintah","text":"Buka file hello-world.c dengan text file editor favoritmu pada file Readme.md terdapat perintah untuk 1 2 3 4 5 The objectives are simple: - Write a function that returns the string \"Hello, World!\". - Run the test suite and make sure that it succeeds. - Submit your solution and check it at the website. Kurang lebih artinya buka file hello-world.c edit supaya saat dicompile dan dijalankan keluar kata \"hello World!\" ingat tugas ini case sensitive.","title":"Baca Perintah"},{"location":"lang/clang/contoh/helloWorld/#edit-file","text":"Edit file hello_world.c sehingga menjadi seperti dibawah ini 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Include the standard definitions header from the standard library, so that we // have access to 'NULL'. This can be removed if your changes remove the need // for 'NULL'. #include <stddef.h> #include \"hello_world.h\" // Define the function itself. const char * hello ( void ) { // To fix this function, change the return statement here to instead return // a string equivalent to the string expected by the failing test. return \"Hello, World!\" ; }","title":"Edit File"},{"location":"lang/clang/contoh/helloWorld/#makecompile","text":"arahkan terminal ke folder induk tracks, tempat dimana terdapat file Makefile dan jalankan 1 2 3 4 5 6 $ make test/test_hello_world.c:32:test_say_hi:PASS ----------------------- 1 Tests 0 Failures 0 Ignored OK","title":"Make/Compile"},{"location":"lang/clang/contoh/helloWorld/#kirim-jawaban-ke-exercismio","text":"jika ada tulisan 0 Failures pada step Make/Compile maka tracks udah selesai dan siap dikirim. Kirim jawaban dengan tool exercism menggunakan option summit 1 2 3 4 5 6 7 $ exercism submit src/hello_world.c Your solution has been submitted successfully. You can complete the exercise and unlock the next core exercise at: https://exercism.io/my/solutions/57145772eb7542539928bf880ee02cb7","title":"Kirim Jawaban ke Exercism.io"},{"location":"lang/clang/contoh/helloWorld/#completing-tracks","text":"Buka lagi situs Exercism.io login jika belum dan buka exercise pada sub bab Pilih C Source tekan tombol complete this solution . sekarang buka tracks selanjutnya hehehe. Goodluck","title":"Completing tracks"},{"location":"lang/clang/contoh/resistorColor/","text":"Resistor Color Intro If you want to build something using a Raspberry Pi, you'll probably use resistors. For this exercise, you need to know two things about them: Each resistor has a resistance value. Resistors are small - so small in fact that if you printed the resistance value on them, it would be hard to read. To get around this problem, manufacturers print color-coded bands onto the resistors to denote their resistance values. Each band has a position and a numeric value. The first 2 bands of a resistor have a simple encoding scheme: each color maps to a single number. In this exercise you are going to create a helpful program so that you don't have to remember the values of the bands. These colors are encoded as follows: Black: 0 Brown: 1 Red: 2 Orange: 3 Yellow: 4 Green: 5 Blue: 6 Violet: 7 Grey: 8 White: 9 Task The goal of this exercise is to create a way: to look up the numerical value associated with a particular color band to list the different band colors The Code resistor_color.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #ifndef RESISTOR_COLOR_H #define RESISTOR_COLOR_H /* - Black: 0 - Brown: 1 - Red: 2 - Orange: 3 - Yellow: 4 - Green: 5 - Blue: 6 - Violet: 7 - Grey: 8 - White: 9 */ typedef enum { BLACK = 0 , BROWN , RED , ORANGE , YELLOW , GREEN , BLUE , VIOLET , GREY , WHITE } resistor_band_t ; int color_code ( resistor_band_t test ); resistor_band_t * colors ( void ); #endif resistor_color.c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include \"resistor_color.h\" resistor_band_t * colors ( void ) { static resistor_band_t var01 [] = { BLACK , BROWN , RED , ORANGE , YELLOW , GREEN , BLUE , VIOLET , GREY , WHITE }; return var01 ; } int color_code ( resistor_band_t test ) { return test ; }","title":"Resistor Color"},{"location":"lang/clang/contoh/resistorColor/#resistor-color","text":"","title":"Resistor Color"},{"location":"lang/clang/contoh/resistorColor/#intro","text":"If you want to build something using a Raspberry Pi, you'll probably use resistors. For this exercise, you need to know two things about them: Each resistor has a resistance value. Resistors are small - so small in fact that if you printed the resistance value on them, it would be hard to read. To get around this problem, manufacturers print color-coded bands onto the resistors to denote their resistance values. Each band has a position and a numeric value. The first 2 bands of a resistor have a simple encoding scheme: each color maps to a single number. In this exercise you are going to create a helpful program so that you don't have to remember the values of the bands. These colors are encoded as follows: Black: 0 Brown: 1 Red: 2 Orange: 3 Yellow: 4 Green: 5 Blue: 6 Violet: 7 Grey: 8 White: 9","title":"Intro"},{"location":"lang/clang/contoh/resistorColor/#task","text":"The goal of this exercise is to create a way: to look up the numerical value associated with a particular color band to list the different band colors","title":"Task"},{"location":"lang/clang/contoh/resistorColor/#the-code","text":"resistor_color.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #ifndef RESISTOR_COLOR_H #define RESISTOR_COLOR_H /* - Black: 0 - Brown: 1 - Red: 2 - Orange: 3 - Yellow: 4 - Green: 5 - Blue: 6 - Violet: 7 - Grey: 8 - White: 9 */ typedef enum { BLACK = 0 , BROWN , RED , ORANGE , YELLOW , GREEN , BLUE , VIOLET , GREY , WHITE } resistor_band_t ; int color_code ( resistor_band_t test ); resistor_band_t * colors ( void ); #endif resistor_color.c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include \"resistor_color.h\" resistor_band_t * colors ( void ) { static resistor_band_t var01 [] = { BLACK , BROWN , RED , ORANGE , YELLOW , GREEN , BLUE , VIOLET , GREY , WHITE }; return var01 ; } int color_code ( resistor_band_t test ) { return test ; }","title":"The Code"},{"location":"lang/clang/contoh/resistorColorDuo/","text":"Resistor Color Duo Intro If you want to build something using a Raspberry Pi, you'll probably use resistors . For this exercise, you need to know two things about them: Each resistor has a resistance value. Resistors are small - so small in fact that if you printed the resistance value on them, it would be hard to read. To get around this problem, manufacturers print color-coded bands onto the resistors to denote their resistance values. Each band has a position and a numeric value. The first 2 bands of a resistor have a simple encoding scheme: each color maps to a single number. For example, if they printed a brown band (value 1) followed by a green band (value 5), it would translate to the number 15. In this exercise you are going to create a helpful program so that you don't have to remember the values of the bands. The program will take color names as input and output a two digit number, even if the input is more than two colors! The band colors are encoded as follows: Black: 0 Brown: 1 Red: 2 Orange: 3 Yellow: 4 Green: 5 Blue: 6 Violet: 7 Grey: 8 White: 9 Task From the example above: brown-green should return 15 brown-green-violet should return 15 too, ignoring the third color. The Code resistor_color_duo.c 1 2 3 4 5 #include \"resistor_color_duo.h\" int color_code ( resistor_band_t * test ){ return ( test [ 0 ] * 10 + test [ 1 ]); } resistor_color_duo.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #ifndef RESISTOR_COLOR_DUO_H #define RESISTOR_COLOR_DUO_H typedef enum { BLACK = 0 , BROWN , RED , ORANGE , YELLOW , GREEN , BLUE , VIOLET , GREY , WHITE } resistor_band_t ; int color_code ( resistor_band_t * test ); #endif","title":"Resistor Color Duo"},{"location":"lang/clang/contoh/resistorColorDuo/#resistor-color-duo","text":"","title":"Resistor Color Duo"},{"location":"lang/clang/contoh/resistorColorDuo/#intro","text":"If you want to build something using a Raspberry Pi, you'll probably use resistors . For this exercise, you need to know two things about them: Each resistor has a resistance value. Resistors are small - so small in fact that if you printed the resistance value on them, it would be hard to read. To get around this problem, manufacturers print color-coded bands onto the resistors to denote their resistance values. Each band has a position and a numeric value. The first 2 bands of a resistor have a simple encoding scheme: each color maps to a single number. For example, if they printed a brown band (value 1) followed by a green band (value 5), it would translate to the number 15. In this exercise you are going to create a helpful program so that you don't have to remember the values of the bands. The program will take color names as input and output a two digit number, even if the input is more than two colors! The band colors are encoded as follows: Black: 0 Brown: 1 Red: 2 Orange: 3 Yellow: 4 Green: 5 Blue: 6 Violet: 7 Grey: 8 White: 9","title":"Intro"},{"location":"lang/clang/contoh/resistorColorDuo/#task","text":"From the example above: brown-green should return 15 brown-green-violet should return 15 too, ignoring the third color.","title":"Task"},{"location":"lang/clang/contoh/resistorColorDuo/#the-code","text":"resistor_color_duo.c 1 2 3 4 5 #include \"resistor_color_duo.h\" int color_code ( resistor_band_t * test ){ return ( test [ 0 ] * 10 + test [ 1 ]); } resistor_color_duo.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #ifndef RESISTOR_COLOR_DUO_H #define RESISTOR_COLOR_DUO_H typedef enum { BLACK = 0 , BROWN , RED , ORANGE , YELLOW , GREEN , BLUE , VIOLET , GREY , WHITE } resistor_band_t ; int color_code ( resistor_band_t * test ); #endif","title":"The Code"},{"location":"lang/clang/contoh/resistorColorTrio/","text":"Resistor Color Trio Intro If you want to build something using a Raspberry Pi, you'll probably use resistors . For this exercise, you need to know only three things about them: Each resistor has a resistance value. Resistors are small - so small in fact that if you printed the resistance value on them, it would be hard to read. To get around this problem, manufacturers print color-coded bands onto the resistors to denote their resistance values. Each band acts as a digit of a number. For example, if they printed a brown band (value 1) followed by a green band (value 5), it would translate to the number 15. In this exercise, you are going to create a helpful program so that you don't have to remember the values of the bands.The program will take 3 colors as input, and outputs the correct value, in ohms. The color bands are encoded as follows: Black: 0 Brown: 1 Red: 2 Orange: 3 Yellow: 4 Green: 5 Blue: 6 Violet: 7 Grey: 8 White: 9 In resistor-color duo you decoded the first two colors. For instance: orange-orange got the main value 33 . The third color stands for how many zeros need to be added to the main value. The main value plus the zeros gives us a value in ohms. For the exercise it doesn't matter what ohms really are. For example: orange-orange-black would be 33 and no zeros, which becomes 33 ohms. orange-orange-red would be 33 and 2 zeros, which becomes 3300 ohms. orange-orange-orange would be 33 and 3 zeros, which becomes 33000 ohms. (If Math is your thing, you may want to think of the zeros as exponents of 10. If Math is not your thing, go with the zeros. It really is the same thing, just in plain English instead of Math lingo.) Task This exercise is about translating the colors into a label: \"... ohms\" So an input of \"orange\", \"orange\", \"black\" should return: \"33 ohms\" When we get more than a thousand ohms, we say \"kiloohms\". That's similar to saying \"kilometer\" for 1000 meters, and \"kilograms\" for 1000 grams. So an input of \"orange\", \"orange\", \"orange\" should return: \"33 kiloohms\" The Code","title":"Resistor Color Trio"},{"location":"lang/clang/contoh/resistorColorTrio/#resistor-color-trio","text":"","title":"Resistor Color Trio"},{"location":"lang/clang/contoh/resistorColorTrio/#intro","text":"If you want to build something using a Raspberry Pi, you'll probably use resistors . For this exercise, you need to know only three things about them: Each resistor has a resistance value. Resistors are small - so small in fact that if you printed the resistance value on them, it would be hard to read. To get around this problem, manufacturers print color-coded bands onto the resistors to denote their resistance values. Each band acts as a digit of a number. For example, if they printed a brown band (value 1) followed by a green band (value 5), it would translate to the number 15. In this exercise, you are going to create a helpful program so that you don't have to remember the values of the bands.The program will take 3 colors as input, and outputs the correct value, in ohms. The color bands are encoded as follows: Black: 0 Brown: 1 Red: 2 Orange: 3 Yellow: 4 Green: 5 Blue: 6 Violet: 7 Grey: 8 White: 9 In resistor-color duo you decoded the first two colors. For instance: orange-orange got the main value 33 . The third color stands for how many zeros need to be added to the main value. The main value plus the zeros gives us a value in ohms. For the exercise it doesn't matter what ohms really are. For example: orange-orange-black would be 33 and no zeros, which becomes 33 ohms. orange-orange-red would be 33 and 2 zeros, which becomes 3300 ohms. orange-orange-orange would be 33 and 3 zeros, which becomes 33000 ohms. (If Math is your thing, you may want to think of the zeros as exponents of 10. If Math is not your thing, go with the zeros. It really is the same thing, just in plain English instead of Math lingo.)","title":"Intro"},{"location":"lang/clang/contoh/resistorColorTrio/#task","text":"This exercise is about translating the colors into a label: \"... ohms\" So an input of \"orange\", \"orange\", \"black\" should return: \"33 ohms\" When we get more than a thousand ohms, we say \"kiloohms\". That's similar to saying \"kilometer\" for 1000 meters, and \"kilograms\" for 1000 grams. So an input of \"orange\", \"orange\", \"orange\" should return: \"33 kiloohms\"","title":"Task"},{"location":"lang/clang/contoh/resistorColorTrio/#the-code","text":"","title":"The Code"},{"location":"linux/artix/pengenalan/","text":"","title":"Pengenalan"},{"location":"microController/mcs51/hardware/","text":"","title":"Hardware"},{"location":"microController/mcs51/helloWorldAsm/","text":"Hello Wolrd Assembly Style Seperti berbagai contoh bahasa pemograman lain. Pogram pertama yang kita buat adalah Hello World hehe. but bukan berarti memunculkan kata Hello World di layar PC namun untuk menyalakan dan mematikan LED atau lebih tepat nya pin pada AT89S52 dengan interval tertentu. Psudo Code 1 2 3 4 5 6 main: set pin PORT1.0 menjadi LOW delay 1 detik set pin PORT1.0 menjadi HIGH delay 1 detik lompat ke main Dari diatas dapat dibangun program assembly seperti dibawah ini 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 jmp main delay: ; delay nop ; seharusnya disini dibuat looping sampai 1s. Masalahnya ; untuk simulasi hal ini sangat menggangu karena ; simulasi tidak secepat hardware asli. ; jadi untuk simulasi digunakan nop == 1clock ret main: ; main setb p1.0 ; set == buat high p1.0 call delay ; delay 1s clr p1.0 ; clr == buat low p1.0 call delay ; delay 1s jmp main ; lompat ke main end ketik atau copas code diatas pada MCU 8051 IDE dan tekan \"Compile\"(F11) jika tidak ada error pada panel message tekan tombol \"Start debug\"(F5) maka akan muncul garis warna hijau di code kita, tekan \"Step\"(F7) untuk mulai menjalankan pogram step by step. Perhatikan panel \"Simulator\" pada bagian \"P1\" nilai dari HEX dan BIN akan berubah-ubah saat pogram sampai pada baris setb P1.0 dan clr P1.0 jika program ini dimasukkan atau di downloadkan pada AT89S52 maka teganan dari P1.0 akan berubah dari 0v ke 5v dan kembali lagi. Materi Lanjutan Untuk belajar lebih banyak tentang assembly pada AT89S52 silahkan dilanjutkan pada \"Assembly 8051\" Goodluck.","title":"Hello World Asm"},{"location":"microController/mcs51/helloWorldAsm/#hello-wolrd-assembly-style","text":"Seperti berbagai contoh bahasa pemograman lain. Pogram pertama yang kita buat adalah Hello World hehe. but bukan berarti memunculkan kata Hello World di layar PC namun untuk menyalakan dan mematikan LED atau lebih tepat nya pin pada AT89S52 dengan interval tertentu.","title":"Hello Wolrd Assembly Style"},{"location":"microController/mcs51/helloWorldAsm/#psudo-code","text":"1 2 3 4 5 6 main: set pin PORT1.0 menjadi LOW delay 1 detik set pin PORT1.0 menjadi HIGH delay 1 detik lompat ke main Dari diatas dapat dibangun program assembly seperti dibawah ini 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 jmp main delay: ; delay nop ; seharusnya disini dibuat looping sampai 1s. Masalahnya ; untuk simulasi hal ini sangat menggangu karena ; simulasi tidak secepat hardware asli. ; jadi untuk simulasi digunakan nop == 1clock ret main: ; main setb p1.0 ; set == buat high p1.0 call delay ; delay 1s clr p1.0 ; clr == buat low p1.0 call delay ; delay 1s jmp main ; lompat ke main end ketik atau copas code diatas pada MCU 8051 IDE dan tekan \"Compile\"(F11) jika tidak ada error pada panel message tekan tombol \"Start debug\"(F5) maka akan muncul garis warna hijau di code kita, tekan \"Step\"(F7) untuk mulai menjalankan pogram step by step. Perhatikan panel \"Simulator\" pada bagian \"P1\" nilai dari HEX dan BIN akan berubah-ubah saat pogram sampai pada baris setb P1.0 dan clr P1.0 jika program ini dimasukkan atau di downloadkan pada AT89S52 maka teganan dari P1.0 akan berubah dari 0v ke 5v dan kembali lagi.","title":"Psudo Code"},{"location":"microController/mcs51/helloWorldAsm/#materi-lanjutan","text":"Untuk belajar lebih banyak tentang assembly pada AT89S52 silahkan dilanjutkan pada \"Assembly 8051\" Goodluck.","title":"Materi Lanjutan"},{"location":"microController/mcs51/helloWorldC/","text":"Hello World C style Sama seperti pada halaman \"Hello World Asm Style\" , pogram ini untuk menyalakan dan mematikan Pin pada AT89S52. Hanya saja menggunakan C (SDCC). Pembuatan Project Baru Hampir sama dengan step dari halaman \"Software\" pada bab \"Create New Project\" , namun pada step \"Save As\" simpan dengan nama main.c , lihat perbedaan extension nya untuk assembly adalah .asm sedang untuk C adalah .c , berikut step nya. Buat folder kosong dengan nama coba02 pada toolbar \"Project\" pilih \"New\" Image: New Project isi dengan Project Name = coba02 (jangan pakai spasi dan jangan terlalu panjang) Project Directory = /home/<user>/mcs51/coba01 (jangan pakai spasi dan jangan terlalu panjang) Type = AT89S52 tekan \"OK\", jika ada tawaran untuk membuat folder baru tekan saya \"Yes\" Langkah pertama yang harus dilakukan adalah save file, tekan menu \"File\" pada toolbar dan pilih \"Save As\" maka akan muncul gambar seperti berikut Image: Save As pada menu \"Filter\" terlihat jenis file yang disupport oleh MCU 8051 IDE yakni .asm == 8051 assembly .c == SDCC C source .h == SDCC C Header untuk saat ini kita akan mencoba menggunakan file C. pada gambar \"Save As\" isi \"Location\" dengan coba02.c dan filter pilih * atau .c . Jika sesuai dengan urutan maka hasil nya seperti dibawah ini. Image: New Project Done. The Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <8052.h> //! function delay //! sama seperti pada contoh assembly //! pada hw asli ini berisi loop sampai 1detik namum //! pada simulasi sangat mengganggu karena simulasi //! tidak secepat hw asli. jadi diganti dengan delay //! 1clock. void delay ( void ) { __asm nop __endasm ; } //! fungsi main void main ( void ) { while ( 1 ){ // loop awal P1_0 = 0 ; // pin P1.0 == 0v delay (); // delay P1_0 = 1 ; // pin P1.0 == 5v delay (); // delay } // ulang ke awal lagi } Copas atau ketik ulang code diatas dan tekan F11 untuk compile, jika tidak ada pesan error pada panel message, maka bisa lanjut kemode debug dengan menekan tombol F5, jalankan pogram baris per baris dengan menekan tombol F6. Untuk contoh-contoh yang lebih menarik bisa dilanjutkan di \"MCS51 C\" Goodluck","title":"Hello World C"},{"location":"microController/mcs51/helloWorldC/#hello-world-c-style","text":"Sama seperti pada halaman \"Hello World Asm Style\" , pogram ini untuk menyalakan dan mematikan Pin pada AT89S52. Hanya saja menggunakan C (SDCC).","title":"Hello World C style"},{"location":"microController/mcs51/helloWorldC/#pembuatan-project-baru","text":"Hampir sama dengan step dari halaman \"Software\" pada bab \"Create New Project\" , namun pada step \"Save As\" simpan dengan nama main.c , lihat perbedaan extension nya untuk assembly adalah .asm sedang untuk C adalah .c , berikut step nya. Buat folder kosong dengan nama coba02 pada toolbar \"Project\" pilih \"New\" Image: New Project isi dengan Project Name = coba02 (jangan pakai spasi dan jangan terlalu panjang) Project Directory = /home/<user>/mcs51/coba01 (jangan pakai spasi dan jangan terlalu panjang) Type = AT89S52 tekan \"OK\", jika ada tawaran untuk membuat folder baru tekan saya \"Yes\" Langkah pertama yang harus dilakukan adalah save file, tekan menu \"File\" pada toolbar dan pilih \"Save As\" maka akan muncul gambar seperti berikut Image: Save As pada menu \"Filter\" terlihat jenis file yang disupport oleh MCU 8051 IDE yakni .asm == 8051 assembly .c == SDCC C source .h == SDCC C Header untuk saat ini kita akan mencoba menggunakan file C. pada gambar \"Save As\" isi \"Location\" dengan coba02.c dan filter pilih * atau .c . Jika sesuai dengan urutan maka hasil nya seperti dibawah ini. Image: New Project Done.","title":"Pembuatan Project Baru"},{"location":"microController/mcs51/helloWorldC/#the-code","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <8052.h> //! function delay //! sama seperti pada contoh assembly //! pada hw asli ini berisi loop sampai 1detik namum //! pada simulasi sangat mengganggu karena simulasi //! tidak secepat hw asli. jadi diganti dengan delay //! 1clock. void delay ( void ) { __asm nop __endasm ; } //! fungsi main void main ( void ) { while ( 1 ){ // loop awal P1_0 = 0 ; // pin P1.0 == 0v delay (); // delay P1_0 = 1 ; // pin P1.0 == 5v delay (); // delay } // ulang ke awal lagi } Copas atau ketik ulang code diatas dan tekan F11 untuk compile, jika tidak ada pesan error pada panel message, maka bisa lanjut kemode debug dengan menekan tombol F5, jalankan pogram baris per baris dengan menekan tombol F6. Untuk contoh-contoh yang lebih menarik bisa dilanjutkan di \"MCS51 C\" Goodluck","title":"The Code"},{"location":"microController/mcs51/pengenalan/","text":"Pengenalan Intel 8051(mcs51) merupakan micro controller yang cukup tua. dari wikipedia, intel mulai mengembangkannya pada tahun 1980 1 . cukup tua hehe. Meskipun sudah tua mcs51 sampai sekarang masih tetap dikembangkan dan digunakan tidak hanya itu bahkan beberapa produsen meningkatkan performa mcs51 yang sebelumnya membutuhkan 12cycle clock(tiks) untuk satu instruksi menjadi 1-4tiks saja, selain itu juga penambahan beberapa periperal modern seperti ADC Gated GPIO PWM CAN LCD RTC Dll menjadikan mcs51 masih populer sampai sekarang. Dari sisi software sampai sekarang pun, mcs51 masih terus dikembangkan baik secara opensource atau proprietary. diantaranya Keil - asm dan c IAR - asm dan c SDCC - asm dan c Pada dokument ini akan menggunakan seri AT89S52 dimana hampir tidak ada perubahan performa dan periperal dibandingkan seri keluarkan intel selain perubahan dari EEPROM pada mcs51 menjadi flash dan sub system ISP pada seri AT89S52. https://en.wikipedia.org/wiki/Intel_MCS-51 \u21a9","title":"Pengenalan"},{"location":"microController/mcs51/pengenalan/#pengenalan","text":"Intel 8051(mcs51) merupakan micro controller yang cukup tua. dari wikipedia, intel mulai mengembangkannya pada tahun 1980 1 . cukup tua hehe. Meskipun sudah tua mcs51 sampai sekarang masih tetap dikembangkan dan digunakan tidak hanya itu bahkan beberapa produsen meningkatkan performa mcs51 yang sebelumnya membutuhkan 12cycle clock(tiks) untuk satu instruksi menjadi 1-4tiks saja, selain itu juga penambahan beberapa periperal modern seperti ADC Gated GPIO PWM CAN LCD RTC Dll menjadikan mcs51 masih populer sampai sekarang. Dari sisi software sampai sekarang pun, mcs51 masih terus dikembangkan baik secara opensource atau proprietary. diantaranya Keil - asm dan c IAR - asm dan c SDCC - asm dan c Pada dokument ini akan menggunakan seri AT89S52 dimana hampir tidak ada perubahan performa dan periperal dibandingkan seri keluarkan intel selain perubahan dari EEPROM pada mcs51 menjadi flash dan sub system ISP pada seri AT89S52. https://en.wikipedia.org/wiki/Intel_MCS-51 \u21a9","title":"Pengenalan"},{"location":"microController/mcs51/sdcc/","text":"SDCC Ada beberapa software C compiler untuk AT89S52 seperti yang sudah dijelaskan pada document \"MCS 51 Software\" . Pada document ini hanya untuk SDCC dikarenakan SDCC merupakan software open source dan dapat di download dengan gratis. Instalasi SDCC dapat didownload pada alamat http://sdcc.sourceforge.net pada windows installasinya cukup sederhana tinggal next, next, next, yes, finish. Pada linux SDCC umumnya sudah terdapat pada repo masing-masing, untuk Artix gunakan pacman atau yay untuk instalasi, dengan perintah $ pacman -S sdcc atau $ yay -S sdcc Untuk memastikan SDCC sudah terinstall dengan benar buka terminal dan jalankan perintah sdcc -v jika muncul keterangan seperti dibawah ini berarti SDCC sudah siap digunakan. 1 2 3 $ sdcc -v SDCC : mcs51/z80/z180/r2k/r3ka/gbz80/tlcs90/ez80_z80/ds390/pic16/pic14/TININative/ds400/hc08/s08/stm8/pdk13/pdk14/pdk15 4 .0.0 #11528 (Linux) published under GNU General Public License ( GPL ) Yups SDCC memang bisa digunakan untuk menghasilkan code(target) untuk berbagai macam micro controller, namum pada document ini hanya dibahas untuk target mcs51.","title":"SDCC"},{"location":"microController/mcs51/sdcc/#sdcc","text":"Ada beberapa software C compiler untuk AT89S52 seperti yang sudah dijelaskan pada document \"MCS 51 Software\" . Pada document ini hanya untuk SDCC dikarenakan SDCC merupakan software open source dan dapat di download dengan gratis.","title":"SDCC"},{"location":"microController/mcs51/sdcc/#instalasi","text":"SDCC dapat didownload pada alamat http://sdcc.sourceforge.net pada windows installasinya cukup sederhana tinggal next, next, next, yes, finish. Pada linux SDCC umumnya sudah terdapat pada repo masing-masing, untuk Artix gunakan pacman atau yay untuk instalasi, dengan perintah $ pacman -S sdcc atau $ yay -S sdcc Untuk memastikan SDCC sudah terinstall dengan benar buka terminal dan jalankan perintah sdcc -v jika muncul keterangan seperti dibawah ini berarti SDCC sudah siap digunakan. 1 2 3 $ sdcc -v SDCC : mcs51/z80/z180/r2k/r3ka/gbz80/tlcs90/ez80_z80/ds390/pic16/pic14/TININative/ds400/hc08/s08/stm8/pdk13/pdk14/pdk15 4 .0.0 #11528 (Linux) published under GNU General Public License ( GPL ) Yups SDCC memang bisa digunakan untuk menghasilkan code(target) untuk berbagai macam micro controller, namum pada document ini hanya dibahas untuk target mcs51.","title":"Instalasi"},{"location":"microController/mcs51/software/","text":"Software Note Tanpa Software/Firmware pun AT89S52 masih sangat berguna, sebagai gantungan kunci hehe. Fungsi Software Fungsi dari software ini adalah untuk menggerakkan berbagai peripheral yang tersedia didalam AT89S52 misalnya adalah Port Input Output (PIO), Timer, Serial Port, dll. Tidak seperti bagian hardware yang sangat miskin dibanding micro controller lainnya, AT89S52 memiliki dukungan yang melimpah di bagian ini. Mulai dari asembler, c compiler, pascal compiler, basic compiler sampai simulator bisa dicari dengan sangat mudah. untuk keperluan pembuatan software/firmware dari AT89S52 saya menggunakan MCU 8051 IDE yang bagi saya sudah lebih dari cukup untuk membuat firmware C atau assembly. MCU 8051 IDE Tidak seperti software PC pada umumnya, software pada micro controller tidak bisa dijalankan(klik 2x) pada PC, hal ini dikarenakan cpu pada PC(x86 atau compatilbe) berbeda dengan cpu AT89S52, sehingga untuk menjalankan software ini digunakan emulator, opsi lainnya adalah mencobanya langsung ke dev board, opsi terakhir ini kurang cocok untuk latihan pemograman AT89S52 selain harus beli board nya juga proses pemindahan data dari PC ke AT89S52 relative ribet hehe dan juga untuk belajar AT89S52 ini salah satu prosesnya adalah debugging, men-debug dengan menggunakan board langsung membutuhkan alat-alat yang relative mahal, jadi solusi emulator masih solusi terbaik untuk saat ini. MCU 8051 IDE memiliki berbagai fitur yang sangat menarik diantaranya Mendukung bahasa C dan assembly. Mendukung debugger. Mendukung berbagai macam komponen virtual seperti switch, LCD, dll. Cara Install MCU 8051 IDE bisa digunakan di berbagai OS, diantaranya Linux, Windows, BSD, dll. Pada dokument ini hanya membahas cara install pada Linux dan windows. Linux Pada Artix linux untuk MCU 8051 IDE terdapat pada aur, cara termudah menginstallnya adalah dengan menggunakan yay 1 $ yay -S mcu8051ide Setelah MCU 8051 IDE berhasil terinstall akan muncul shortcut di application menu. atau juga bisa dijalankan melalui shell dengan perintah 1 $ mcu8051ide Windows MCU 8051 IDE bisa didownload pada situs https://sourceforge.net/projects/mcu8051ide/ cara install nya seperti biasa klik2x dan next, next, next, finish. hehe. Create New Project Image: Tampilah msc8051ide di Artix Linux Jika gambar \"mcs51ide\" muncul saat applikasi dijalankan, lanjut ke langkah selanjutnya pada toolbar \"Project\" pilih \"New\" Image: New Project isi dengan Project Name = coba01 (jangan pakai spasi dan jangan terlalu panjang) Project Directory = /home/<user>/mcs51/coba01 Type = AT89S52 tekan \"OK\", jika ada tawaran untuk membuat folder baru tekan saya \"Yes\" Langkah pertama yang harus dilakukan adalah save file, tekan menu \"File\" pada toolbar dan pilih \"Save As\" maka akan muncul gambar seperti berikut Image: Save As pada menu \"Filter\" terlihat jenis file yang disupport oleh MCU 8051 IDE yakni .asm == 8051 assembly .c == SDCC C source .h == SDCC C Header untuk saat ini kita akan mencoba menggunakan file assembly. pada gambar \"Save As\" isi \"Location\" dengan coba01.asm dan filter pilih * atau .asm . Jika sesuai dengan urutan maka hasil nya seperti dibawah ini. Image: New Project Done.","title":"MCU8051IDE"},{"location":"microController/mcs51/software/#software","text":"Note Tanpa Software/Firmware pun AT89S52 masih sangat berguna, sebagai gantungan kunci hehe.","title":"Software"},{"location":"microController/mcs51/software/#fungsi-software","text":"Fungsi dari software ini adalah untuk menggerakkan berbagai peripheral yang tersedia didalam AT89S52 misalnya adalah Port Input Output (PIO), Timer, Serial Port, dll. Tidak seperti bagian hardware yang sangat miskin dibanding micro controller lainnya, AT89S52 memiliki dukungan yang melimpah di bagian ini. Mulai dari asembler, c compiler, pascal compiler, basic compiler sampai simulator bisa dicari dengan sangat mudah. untuk keperluan pembuatan software/firmware dari AT89S52 saya menggunakan MCU 8051 IDE yang bagi saya sudah lebih dari cukup untuk membuat firmware C atau assembly.","title":"Fungsi Software"},{"location":"microController/mcs51/software/#mcu-8051-ide","text":"Tidak seperti software PC pada umumnya, software pada micro controller tidak bisa dijalankan(klik 2x) pada PC, hal ini dikarenakan cpu pada PC(x86 atau compatilbe) berbeda dengan cpu AT89S52, sehingga untuk menjalankan software ini digunakan emulator, opsi lainnya adalah mencobanya langsung ke dev board, opsi terakhir ini kurang cocok untuk latihan pemograman AT89S52 selain harus beli board nya juga proses pemindahan data dari PC ke AT89S52 relative ribet hehe dan juga untuk belajar AT89S52 ini salah satu prosesnya adalah debugging, men-debug dengan menggunakan board langsung membutuhkan alat-alat yang relative mahal, jadi solusi emulator masih solusi terbaik untuk saat ini. MCU 8051 IDE memiliki berbagai fitur yang sangat menarik diantaranya Mendukung bahasa C dan assembly. Mendukung debugger. Mendukung berbagai macam komponen virtual seperti switch, LCD, dll.","title":"MCU 8051 IDE"},{"location":"microController/mcs51/software/#cara-install","text":"MCU 8051 IDE bisa digunakan di berbagai OS, diantaranya Linux, Windows, BSD, dll. Pada dokument ini hanya membahas cara install pada Linux dan windows.","title":"Cara Install"},{"location":"microController/mcs51/software/#linux","text":"Pada Artix linux untuk MCU 8051 IDE terdapat pada aur, cara termudah menginstallnya adalah dengan menggunakan yay 1 $ yay -S mcu8051ide Setelah MCU 8051 IDE berhasil terinstall akan muncul shortcut di application menu. atau juga bisa dijalankan melalui shell dengan perintah 1 $ mcu8051ide","title":"Linux"},{"location":"microController/mcs51/software/#windows","text":"MCU 8051 IDE bisa didownload pada situs https://sourceforge.net/projects/mcu8051ide/ cara install nya seperti biasa klik2x dan next, next, next, finish. hehe.","title":"Windows"},{"location":"microController/mcs51/software/#create-new-project","text":"Image: Tampilah msc8051ide di Artix Linux Jika gambar \"mcs51ide\" muncul saat applikasi dijalankan, lanjut ke langkah selanjutnya pada toolbar \"Project\" pilih \"New\" Image: New Project isi dengan Project Name = coba01 (jangan pakai spasi dan jangan terlalu panjang) Project Directory = /home/<user>/mcs51/coba01 Type = AT89S52 tekan \"OK\", jika ada tawaran untuk membuat folder baru tekan saya \"Yes\" Langkah pertama yang harus dilakukan adalah save file, tekan menu \"File\" pada toolbar dan pilih \"Save As\" maka akan muncul gambar seperti berikut Image: Save As pada menu \"Filter\" terlihat jenis file yang disupport oleh MCU 8051 IDE yakni .asm == 8051 assembly .c == SDCC C source .h == SDCC C Header untuk saat ini kita akan mencoba menggunakan file assembly. pada gambar \"Save As\" isi \"Location\" dengan coba01.asm dan filter pilih * atau .asm . Jika sesuai dengan urutan maka hasil nya seperti dibawah ini. Image: New Project Done.","title":"Create New Project"},{"location":"microController/mcs51/variables/","text":"","title":"Variables"},{"location":"microController/mcs51/contoh/countDownLed/","text":"Count Down Led Intro Pogram ini akan mengeluarkan nilai 255(0xFF) - 0(0x00) pada port P1. The Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <8052.h> #include <stdint.h> inline void delay ( void ) { __asm nop __endasm ; } void main ( void ) { while ( 1 ){ uint8_t i ; for ( i = 0xff ; i > 0 ; i -- ) { P1 = i ; delay (); } } }","title":"Count Down Led"},{"location":"microController/mcs51/contoh/countDownLed/#count-down-led","text":"","title":"Count Down Led"},{"location":"microController/mcs51/contoh/countDownLed/#intro","text":"Pogram ini akan mengeluarkan nilai 255(0xFF) - 0(0x00) pada port P1.","title":"Intro"},{"location":"microController/mcs51/contoh/countDownLed/#the-code","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <8052.h> #include <stdint.h> inline void delay ( void ) { __asm nop __endasm ; } void main ( void ) { while ( 1 ){ uint8_t i ; for ( i = 0xff ; i > 0 ; i -- ) { P1 = i ; delay (); } } }","title":"The Code"},{"location":"microController/mcs51/contoh/countDownLedAsm/","text":"Intro Sama seperti contoh Count Down Led C cuman ini pakai assembly. The Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 var01 equ 0x30 ; buat variable var01 ; dengan type byte jmp main delay: nop ret main: mov P1 , #0 xff mov R0 , #0 x30 ; isi variable var01 dengan nilai 255 mov @ R0 , #255 ; di dalam asm kayak gini cara isi variable ; ndak bisa langsung hehe. mainFor1: mov P1 , var01 djnz var01 , mainFor1 ; djnz, decrese jump if var01 not zero ke mainFor1 call delay jmp main end","title":"Count Down Led Asm"},{"location":"microController/mcs51/contoh/countDownLedAsm/#intro","text":"Sama seperti contoh Count Down Led C cuman ini pakai assembly.","title":"Intro"},{"location":"microController/mcs51/contoh/countDownLedAsm/#the-code","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 var01 equ 0x30 ; buat variable var01 ; dengan type byte jmp main delay: nop ret main: mov P1 , #0 xff mov R0 , #0 x30 ; isi variable var01 dengan nilai 255 mov @ R0 , #255 ; di dalam asm kayak gini cara isi variable ; ndak bisa langsung hehe. mainFor1: mov P1 , var01 djnz var01 , mainFor1 ; djnz, decrese jump if var01 not zero ke mainFor1 call delay jmp main end","title":"The Code"},{"location":"microController/mcs51/contoh/countUpLed/","text":"Intro Pogram sederhana untuk membuat counter up 0(0x00) sampai 255(0xff) pada port P1 secara biner. The Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <8052.h> #include <stdint.h> void delay ( void ) { __asm nop __endasm ; } void main ( void ) { while ( 1 ){ uint8_t i ; for ( i = 0 ; i < 0xff ; i ++ ) { P1 = i ; delay (); } } }","title":"Count Up Led"},{"location":"microController/mcs51/contoh/countUpLed/#intro","text":"Pogram sederhana untuk membuat counter up 0(0x00) sampai 255(0xff) pada port P1 secara biner.","title":"Intro"},{"location":"microController/mcs51/contoh/countUpLed/#the-code","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <8052.h> #include <stdint.h> void delay ( void ) { __asm nop __endasm ; } void main ( void ) { while ( 1 ){ uint8_t i ; for ( i = 0 ; i < 0xff ; i ++ ) { P1 = i ; delay (); } } }","title":"The Code"},{"location":"microController/mcs51/contoh/countUpLedAsm/","text":"Count Up Led Assembly Sebagai perbandingan antara C dengan Assembly. headache The Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 var01 equ 0x30 ; buat variable var01 ; dengan type byte jmp main delay: nop ret main: mov P1 , #0 h mov R0 , #var01 ; isi variable var01 dengan nilai 255 mov @ R0 , #255 ; di dalam asm kayak gini cara isi variable ; ndak bisa langsung hehe. mainFor1: inc P1 djnz var01 , mainFor1 ; djnz, decrese jump if var01 not zero ke mainFor1 call delay jmp main end","title":"Count Up Led Asm"},{"location":"microController/mcs51/contoh/countUpLedAsm/#count-up-led-assembly","text":"Sebagai perbandingan antara C dengan Assembly. headache","title":"Count Up Led Assembly"},{"location":"microController/mcs51/contoh/countUpLedAsm/#the-code","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 var01 equ 0x30 ; buat variable var01 ; dengan type byte jmp main delay: nop ret main: mov P1 , #0 h mov R0 , #var01 ; isi variable var01 dengan nilai 255 mov @ R0 , #255 ; di dalam asm kayak gini cara isi variable ; ndak bisa langsung hehe. mainFor1: inc P1 djnz var01 , mainFor1 ; djnz, decrese jump if var01 not zero ke mainFor1 call delay jmp main end","title":"The Code"}]}